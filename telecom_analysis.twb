<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
        <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        <aliases>
          <alias key='&quot;MB of usage&quot;' value='MB of usage' />
        </aliases>
        <members>
          <member value='&quot;Total Revenue&quot;' />
          <member value='&quot;Minutes of Usage&quot;' />
          <member value='&quot;On-net Minutes of Usage&quot;' />
          <member value='&quot;Off-net Minutes of Usage&quot;' />
          <member alias='MB of usage' value='&quot;MB of usage&quot;' />
        </members>
      </column>
      <column caption='All Subscriber' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average Revenue Per Subscriber&quot;'>
        <calculation class='tableau' formula='&quot;Average Revenue Per Subscriber&quot;' />
        <members>
          <member value='&quot;Average Revenue Per Subscriber&quot;' />
          <member value='&quot;Average Voice Revenue Per Subscriber&quot;' />
          <member value='&quot;Average Data Revenue Per Subscriber&quot;' />
          <member value='&quot;Average On-net Revenue Per Subscriber&quot;' />
          <member value='&quot;Average Off-net Revenue Per Subscriber&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Minutes of Usage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; MB of usage&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Off-net Minutes of Usage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Total Revenue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;On-net Minutes of Usage&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Data+ (Performance Analysis)' inline='true' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis' name='excel-direct.1tlb7z40noaibi151v67c0qz5tiu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/swx1306043/Desktop/tableau/Performance Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='all_subscriber_calculate' datatype='real' name='[Calculation_1143632845695307776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Average Revenue Per Subscriber&apos; THEN [Calculation_785878150086328322]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Voice Revenue Per Subscriber&apos; THEN [Calculation_785878150087778308]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Data Revenue Per Subscriber&apos; THEN  [Calculation_785878150088794117]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average On-net Revenue Per Subscriber&apos; THEN [Calculation_785878150089248774]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Off-net Revenue Per Subscribe&apos; THEN [Calculation_785878150089527303]&#13;&#10;END' />
      </column>
      <column caption='Voice and Data revenue' datatype='integer' name='[Calculation_1143632845723975681]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue] + [Calculation_785878150086488067]' />
      </column>
      <column caption='Portion [Data / Total]' datatype='real' name='[Calculation_1143632845726089218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue] / [Calculation_407857256002510848]' />
      </column>
      <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
      </column>
      <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
      </column>
      <column caption='Growth Rate' datatype='real' name='[Calculation_573927492425117696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Calculation_407857256012201985]) - LOOKUP(SUM([Calculation_407857256012201985]), -1)) / LOOKUP(SUM([Calculation_407857256012201985]), -1)) * 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average Revenue Per Subscribe' datatype='real' name='[Calculation_785878150086328322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_407857256002510848] / [Number of Revenue Subscribers]' />
      </column>
      <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_785878150086488067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Minutes of Usage] + [OnNet Minutes of Usage]' />
      </column>
      <column caption='Average Voice Revenue Per Subscriber' datatype='real' name='[Calculation_785878150087778308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_785878150086488067] / [Number of Voice Subscribers]' />
      </column>
      <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_785878150088794117]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue] / [Number of Data subscribers]' />
      </column>
      <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_785878150089248774]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue] / [Number of OnNet Subscribers]' />
      </column>
      <column caption='Average Off-net Revenue Per Subscriber ' datatype='real' name='[Calculation_785878150089527303]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue] / [Number of OffNet Subscribers]' />
      </column>
      <column caption='Other Types of Revenue' datatype='integer' name='[Calculation_884957342230269952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue] + [OffNet Revenue]' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_785878150086488067]' derivation='None' name='[none:Calculation_785878150086488067:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Data Revenue]' derivation='None' name='[none:Data Revenue:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_785878150086488067]' derivation='Sum' name='[sum:Calculation_785878150086488067:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Last week' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[wk:Date:ok]' member='26' />
      </group>
      <group caption='Tooltip (DAY(Date))' hidden='true' name='[Tooltip (DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Name)' hidden='true' name='[Tooltip (Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Total Voice Revenue ,Data Revenue)' hidden='true' name='[Tooltip (Total Voice Revenue ,Data Revenue)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_785878150086488067:ok]' />
          <groupfilter function='level-members' level='[none:Data Revenue:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Tariff_Id:ok]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>17</bucket>
            </map>
            <map to='#26713d'>
              <bucket>16</bucket>
            </map>
            <map to='#297a3f'>
              <bucket>15</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>14</bucket>
            </map>
            <map to='#3a8a49'>
              <bucket>13</bucket>
            </map>
            <map to='#44924e'>
              <bucket>12</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>11</bucket>
            </map>
            <map to='#58a253'>
              <bucket>10</bucket>
            </map>
            <map to='#62aa57'>
              <bucket>9</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>8</bucket>
            </map>
            <map to='#73ba67'>
              <bucket>6</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>5</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>4</bucket>
            </map>
            <map to='#93d383'>
              <bucket>3</bucket>
            </map>
            <map to='#a1da92'>
              <bucket>2</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OffNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_785878150086488067:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[pcdf:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OnNet Revenue:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
          <aliases>
            <alias key='&quot;MB of usage&quot;' value='MB of usage' />
          </aliases>
        </column>
        <column caption='All Subscriber' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average Revenue Per Subscriber&quot;'>
          <calculation class='tableau' formula='&quot;Average Revenue Per Subscriber&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Data].[Tariff_Id]' />
                    <expression op='[Tariff].[ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Data' table='[Data$]' type='table'>
                  <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='integer' name='Tariff_Id' ordinal='1' />
                    <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
                    <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
                    <column datatype='integer' name='Data Revenue' ordinal='4' />
                    <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
                    <column datatype='integer' name='MB of Usage' ordinal='6' />
                    <column datatype='integer' name='OnNet Revenue' ordinal='7' />
                    <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
                    <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
                    <column datatype='integer' name='OffNet Revenue' ordinal='10' />
                    <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
                    <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1tlb7z40noaibi151v67c0qz5tiu' name='Tariff' table='[Tariff$]' type='table'>
                  <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
                    <column datatype='integer' name='ID' ordinal='0' />
                    <column datatype='string' name='Name' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (Voice Revenue Analysis)' inline='true' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Voice Revenue Analysis' name='excel-direct.1ggtc2o1r8jjrl15gbpoj12gk4br'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/swx1306043/Desktop/tableau/Voice Revenue Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ggtc2o1r8jjrl15gbpoj12gk4br' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:AL10001:no:A1:AL10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Phone_Number' ordinal='0' />
            <column datatype='string' name='Tariff ID_June' ordinal='1' />
            <column datatype='real' name='Voice_Onnet_Revenue_June' ordinal='2' />
            <column datatype='real' name='Voice_Onnet_Duration_June' ordinal='3' />
            <column datatype='real' name='TOTAL_MB_June' ordinal='4' />
            <column datatype='real' name='Total_Data_revenue_June' ordinal='5' />
            <column datatype='real' name='TOTAL_REVENUE_June' ordinal='6' />
            <column datatype='string' name='Tariff ID_July' ordinal='7' />
            <column datatype='real' name='Voice_Onnet_Revenue_July' ordinal='8' />
            <column datatype='real' name='Voice_Onnet_Duration_July' ordinal='9' />
            <column datatype='real' name='TOTAL_MB_July' ordinal='10' />
            <column datatype='real' name='Total_Data_Revenue_July' ordinal='11' />
            <column datatype='real' name='TOTAL_REVENUE_July' ordinal='12' />
            <column datatype='string' name='Tariff ID_Aug' ordinal='13' />
            <column datatype='real' name='Voice_Onnet_Revenue_Aug' ordinal='14' />
            <column datatype='real' name='Voice_Onnet_Duration_Aug' ordinal='15' />
            <column datatype='real' name='TOTAL_MB_Aug' ordinal='16' />
            <column datatype='real' name='Total_Data_Revenue_Aug' ordinal='17' />
            <column datatype='real' name='Total_revenue_Aug' ordinal='18' />
            <column datatype='string' name='Tariff ID_Sep' ordinal='19' />
            <column datatype='real' name='Voice_Onnet_Revenue_Sep' ordinal='20' />
            <column datatype='real' name='Voice_Onnet_Duration_Sep' ordinal='21' />
            <column datatype='real' name='TOTAL_MB_Sep' ordinal='22' />
            <column datatype='real' name='Total_Data_Revenue_Sep' ordinal='23' />
            <column datatype='real' name='Total_revenue_Sep' ordinal='24' />
            <column datatype='integer' name='Decliners' ordinal='25' />
            <column datatype='real' name='Offnet_Duration_June' ordinal='26' />
            <column datatype='real' name='Offnet_duration_July' ordinal='27' />
            <column datatype='real' name='Offnet_duration_Aug' ordinal='28' />
            <column datatype='real' name='Offnet_duration_Sep' ordinal='29' />
            <column datatype='real' name='Voice_All_Revenue_June' ordinal='30' />
            <column datatype='real' name='Voice_All_Duration_June' ordinal='31' />
            <column datatype='real' name='Voice_All_Revenue_July' ordinal='32' />
            <column datatype='real' name='Voice_All_Duration_July' ordinal='33' />
            <column datatype='real' name='Voice_All_Revenue_Aug' ordinal='34' />
            <column datatype='real' name='Voice_All_Duration_Aug' ordinal='35' />
            <column datatype='real' name='Voice_All_Revenue_Sep' ordinal='36' />
            <column datatype='real' name='Voice_All_Duration_Sep' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ggtc2o1r8jjrl15gbpoj12gk4br' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:AL10001:no:A1:AL10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Phone_Number' ordinal='0' />
            <column datatype='string' name='Tariff ID_June' ordinal='1' />
            <column datatype='real' name='Voice_Onnet_Revenue_June' ordinal='2' />
            <column datatype='real' name='Voice_Onnet_Duration_June' ordinal='3' />
            <column datatype='real' name='TOTAL_MB_June' ordinal='4' />
            <column datatype='real' name='Total_Data_revenue_June' ordinal='5' />
            <column datatype='real' name='TOTAL_REVENUE_June' ordinal='6' />
            <column datatype='string' name='Tariff ID_July' ordinal='7' />
            <column datatype='real' name='Voice_Onnet_Revenue_July' ordinal='8' />
            <column datatype='real' name='Voice_Onnet_Duration_July' ordinal='9' />
            <column datatype='real' name='TOTAL_MB_July' ordinal='10' />
            <column datatype='real' name='Total_Data_Revenue_July' ordinal='11' />
            <column datatype='real' name='TOTAL_REVENUE_July' ordinal='12' />
            <column datatype='string' name='Tariff ID_Aug' ordinal='13' />
            <column datatype='real' name='Voice_Onnet_Revenue_Aug' ordinal='14' />
            <column datatype='real' name='Voice_Onnet_Duration_Aug' ordinal='15' />
            <column datatype='real' name='TOTAL_MB_Aug' ordinal='16' />
            <column datatype='real' name='Total_Data_Revenue_Aug' ordinal='17' />
            <column datatype='real' name='Total_revenue_Aug' ordinal='18' />
            <column datatype='string' name='Tariff ID_Sep' ordinal='19' />
            <column datatype='real' name='Voice_Onnet_Revenue_Sep' ordinal='20' />
            <column datatype='real' name='Voice_Onnet_Duration_Sep' ordinal='21' />
            <column datatype='real' name='TOTAL_MB_Sep' ordinal='22' />
            <column datatype='real' name='Total_Data_Revenue_Sep' ordinal='23' />
            <column datatype='real' name='Total_revenue_Sep' ordinal='24' />
            <column datatype='integer' name='Decliners' ordinal='25' />
            <column datatype='real' name='Offnet_Duration_June' ordinal='26' />
            <column datatype='real' name='Offnet_duration_July' ordinal='27' />
            <column datatype='real' name='Offnet_duration_Aug' ordinal='28' />
            <column datatype='real' name='Offnet_duration_Sep' ordinal='29' />
            <column datatype='real' name='Voice_All_Revenue_June' ordinal='30' />
            <column datatype='real' name='Voice_All_Duration_June' ordinal='31' />
            <column datatype='real' name='Voice_All_Revenue_July' ordinal='32' />
            <column datatype='real' name='Voice_All_Duration_July' ordinal='33' />
            <column datatype='real' name='Voice_All_Revenue_Aug' ordinal='34' />
            <column datatype='real' name='Voice_All_Duration_Aug' ordinal='35' />
            <column datatype='real' name='Voice_All_Revenue_Sep' ordinal='36' />
            <column datatype='real' name='Voice_All_Duration_Sep' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AL10001:no:A1:AL10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phone_Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Phone_Number]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Phone_Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff ID_June</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tariff ID_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff ID_June</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Revenue_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Revenue_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Revenue_June</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Duration_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Duration_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Duration_June</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_MB_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_MB_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_MB_June</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Data_revenue_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Data_revenue_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_Data_revenue_June</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_REVENUE_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_REVENUE_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_REVENUE_June</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff ID_July</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tariff ID_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff ID_July</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Revenue_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Revenue_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Revenue_July</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Duration_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Duration_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Duration_July</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_MB_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_MB_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_MB_July</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Data_Revenue_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Data_Revenue_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_Data_Revenue_July</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_REVENUE_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_REVENUE_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_REVENUE_July</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff ID_Aug</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tariff ID_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff ID_Aug</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Revenue_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Revenue_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Revenue_Aug</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Duration_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Duration_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Duration_Aug</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_MB_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_MB_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_MB_Aug</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Data_Revenue_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Data_Revenue_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_Data_Revenue_Aug</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_revenue_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_revenue_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_revenue_Aug</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff ID_Sep</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tariff ID_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff ID_Sep</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Revenue_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Revenue_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Revenue_Sep</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_Onnet_Duration_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_Onnet_Duration_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_Onnet_Duration_Sep</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_MB_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOTAL_MB_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>TOTAL_MB_Sep</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Data_Revenue_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Data_Revenue_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_Data_Revenue_Sep</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_revenue_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_revenue_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Total_revenue_Sep</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decliners</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Decliners]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Decliners</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offnet_Duration_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offnet_Duration_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Offnet_Duration_June</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offnet_duration_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offnet_duration_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Offnet_duration_July</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offnet_duration_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offnet_duration_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Offnet_duration_Aug</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offnet_duration_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offnet_duration_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Offnet_duration_Sep</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Revenue_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Revenue_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Revenue_June</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Duration_June</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Duration_June]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Duration_June</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Revenue_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Revenue_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Revenue_July</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Duration_July</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Duration_July]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Duration_July</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Revenue_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Revenue_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Revenue_Aug</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Duration_Aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Duration_Aug]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Duration_Aug</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Revenue_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Revenue_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Revenue_Sep</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Voice_All_Duration_Sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Voice_All_Duration_Sep]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Voice_All_Duration_Sep</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Voice All Revenue ' datatype='real' name='[AVG Voice Al Revenue Aug (copy)_884957342243188740]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Voice_All_Revenue_June]+[Voice_All_Revenue_July]+[Voice_All_Revenue_Aug]+[Voice_All_Revenue_Sep])' />
      </column>
      <column caption='Avg Total Revenue' datatype='real' name='[Calculation_217861647759536128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([TOTAL_REVENUE_June]+[TOTAL_REVENUE_July]+[Total_revenue_Aug]+[Total_revenue_Sep])/4' />
      </column>
      <column caption='Avg Voice Onnet Revenue' datatype='real' name='[Calculation_217861647760400385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Voice_Onnet_Duration_Aug]+[Voice_Onnet_Duration_July]+[Voice_Onnet_Duration_June]+[Voice_Onnet_Duration_Sep])' />
      </column>
      <column caption='Bin_MB_of_Usage' datatype='string' name='[Calculation_423901380812156928]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_884957342238679042] &lt;= 100 THEN &apos;0-100&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 500 THEN &apos;101-500&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 1000 THEN &apos;501-1000&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 1500 THEN &apos;1001=1500&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 5000 THEN &apos;1501-5000&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &gt; 5000 THEN &apos;&gt;5000&apos;&#13;&#10;END' />
      </column>
      <column caption='Bin_Avg_Total_Revenue' datatype='string' name='[Calculation_423901380819046402]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_217861647759536128]&lt;5 THEN &apos;&lt;5&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=10 THEN &apos;6-10&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=15 THEN &apos;11-15&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=20 THEN &apos;16-20&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=25 THEN &apos;21-25&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&gt;25 THEN &apos;&gt;25&apos;&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Bin_Avg_Total_Duration' datatype='string' name='[Calculation_423901380823453700]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_884957342240784387] &lt;= 100 THEN &apos;0-100&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 500 THEN &apos;101-500&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 1000 THEN &apos;501-1000&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 1500 THEN &apos;1001=1500&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 5000 THEN &apos;1501-5000&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &gt; 5000 THEN &apos;&gt;5000&apos;&#13;&#10;END' />
      </column>
      <column caption='Total Voice Duration' datatype='real' name='[Calculation_423901380826738693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep]' />
      </column>
      <column caption='Change' datatype='real' name='[Calculation_423901380826972166]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Tariff ID_June]=[Tariff ID_Sep] &#13;&#10;THEN ([Voice_All_Duration_Sep]-[Voice_All_Duration_June])&#13;&#10;END' />
      </column>
      <column caption='More than 50%' datatype='boolean' name='[Calculation_423901380827901959]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Voice_All_Duration_Sep] &lt; 0.5*[Voice_All_Duration_June]' />
      </column>
      <column caption='AVG MB of Usage' datatype='real' name='[Calculation_884957342238679042]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([TOTAL_MB_June]+[TOTAL_MB_July]+[TOTAL_MB_Aug]+[TOTAL_MB_Sep])/4' />
      </column>
      <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
      </column>
      <column caption='Tariff ID_All' datatype='string' name='[Calculation_884957342246039557]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Tariff ID_Aug]+[Tariff ID_July]+[Tariff ID_June]+[Tariff ID_Sep]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Decliners]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Non-Decliners' />
          <alias key='1' value='Decliners' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Offnet_Duration_Aug' datatype='real' name='[Offnet_duration_Aug]' role='measure' type='quantitative' />
      <column caption='Offnet_Duration_July' datatype='real' name='[Offnet_duration_July]' role='measure' type='quantitative' />
      <column caption='Offnet_Duration_Sep' datatype='real' name='[Offnet_duration_Sep]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Phone_Number]' role='dimension' type='ordinal' />
      <column caption='Total_MB_Aug' datatype='real' name='[TOTAL_MB_Aug]' role='measure' type='quantitative' />
      <column caption='Total_MB_July' datatype='real' name='[TOTAL_MB_July]' role='measure' type='quantitative' />
      <column caption='Total_MB_June' datatype='real' name='[TOTAL_MB_June]' role='measure' type='quantitative' />
      <column caption='Total_MB_Sep' datatype='real' name='[TOTAL_MB_Sep]' role='measure' type='quantitative' />
      <column caption='Total_Revenue_July' datatype='real' name='[TOTAL_REVENUE_July]' role='measure' type='quantitative' />
      <column caption='Total_Revenue_June' datatype='real' name='[TOTAL_REVENUE_June]' role='measure' type='quantitative' />
      <column datatype='string' name='[Tariff ID_June]' role='dimension' type='nominal' />
      <column caption='Total_Revenue_Sep' datatype='real' name='[Total_revenue_Sep]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_884957342246039557]' derivation='None' name='[none:Calculation_884957342246039557:nk]' pivot='key' type='nominal' />
      <column-instance column='[Decliners]' derivation='None' name='[none:Decliners:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Tariff ID_June]' derivation='None' name='[none:Tariff ID_June:nk]' pivot='key' type='nominal' />
      <column-instance column='[Decliners]' derivation='Sum' name='[sum:Decliners:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_884957342246039557:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 1Tariff 11&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 18Tariff 12&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 34&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 16Tariff 16Tariff 16Tariff 6&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 17Tariff 15Tariff 8Tariff 17&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 22Tariff 4Tariff 4Tariff 5&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 10Tariff 23&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 26Tariff 26Tariff 1Tariff 26&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 30Tariff 30Tariff 6Tariff 30&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 22&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 5Tariff 22Tariff 19Tariff 5&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 6Tariff 15Tariff 15Tariff 6&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 6&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 5Tariff 11&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 13Tariff 13Tariff 13Tariff 13&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 8Tariff 15&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 15Tariff 7Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 16Tariff 16Tariff 16Tariff 15&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 1Tariff 17&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 1&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 22Tariff 5Tariff 5Tariff 22&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 24Tariff 10Tariff 10Tariff 24&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 27Tariff 2Tariff 2Tariff 27&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 27&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 32Tariff 2Tariff 2Tariff 32&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 26&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 7&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 6Tariff 17Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 6Tariff 2Tariff 2Tariff 6&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 11&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 12&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 11Tariff 7&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Tariff 15Tariff 5Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Tariff 29Tariff 5Tariff 5Tariff 29&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Tariff 6Tariff 5Tariff 5Tariff 22&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 11Tariff 25Tariff 4Tariff 11&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 15Tariff 11Tariff 1Tariff 15&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 5&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 15Tariff 1Tariff 1Tariff 15&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 17Tariff 3Tariff 3Tariff 17&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 12&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 10Tariff 22&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 22Tariff 7Tariff 7Tariff 22&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 25Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 2Tariff 27&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 12&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 4Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 22&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 6Tariff 4Tariff 2Tariff 6&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 22&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 7Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 23&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 4Tariff 11&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 5Tariff 12&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 18Tariff 18Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 25&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 4&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 11Tariff 23&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 11Tariff 6Tariff 6Tariff 26&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 26&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 26Tariff 26Tariff 19Tariff 26&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 29Tariff 29Tariff 7Tariff 29&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 25&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 27&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 5Tariff 4Tariff 4Tariff 5&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 29&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Tariff 7Tariff 1Tariff 1Tariff 7&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 22&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 2Tariff 12&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 15Tariff 17Tariff 15Tariff 15&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 17Tariff 8Tariff 8Tariff 7&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 22Tariff 1Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 3Tariff 22&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 3Tariff 23&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 26Tariff 1Tariff 1Tariff 26&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 28Tariff 28Tariff 6Tariff 28&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 6&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 6&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 5Tariff 15Tariff 15Tariff 5&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 1Tariff 5&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 6Tariff 8Tariff 8Tariff 6&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 22&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 11Tariff 15Tariff 5Tariff 11&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 4Tariff 5&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 22Tariff 3Tariff 3Tariff 5&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 26Tariff 29Tariff 6Tariff 26&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 5Tariff 15Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 7&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 5&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 12Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 17Tariff 15&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 3Tariff 15&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 15Tariff 5Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 17Tariff 6Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 18Tariff 2Tariff 2Tariff 18&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 28&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 1Tariff 6&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 23Tariff 5Tariff 5Tariff 23&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 5Tariff 25&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 8Tariff 27&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 4Tariff 22Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 4Tariff 2Tariff 2Tariff 4&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 5Tariff 6Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 10Tariff 6&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 2Tariff 6&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 7&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 22Tariff 8Tariff 8Tariff 15&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 29Tariff 29Tariff 6Tariff 29&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 5Tariff 10Tariff 10Tariff 5&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 6Tariff 5Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 28&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Tariff 6Tariff 7Tariff 7Tariff 22&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 12Tariff 4Tariff 4Tariff 12&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 22&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 15Tariff 4Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 17Tariff 17&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 17Tariff 6Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 25&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 22Tariff 15Tariff 15Tariff 15&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 22Tariff 25Tariff 4Tariff 22&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 3Tariff 25&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 6Tariff 27&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 25&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 4Tariff 15Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 1Tariff 5&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 7Tariff 6&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 5&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tariff 9Tariff 9Tariff 2Tariff 9&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 15Tariff 4Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 6Tariff 12&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 6Tariff 7&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 18Tariff 18Tariff 8Tariff 18&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 11&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 6Tariff 23&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 28Tariff 8Tariff 8Tariff 28&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 6&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 8Tariff 4&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 9Tariff 6&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 15Tariff 16Tariff 16Tariff 15&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 18Tariff 18Tariff 6Tariff 18&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 9&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 18Tariff 25&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 27Tariff 6Tariff 6Tariff 22&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 32Tariff 1Tariff 1Tariff 32&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 4Tariff 15Tariff 7Tariff 4&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 3Tariff 4&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 5Tariff 22Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 4Tariff 7&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 26&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 12Tariff 1Tariff 1Tariff 12&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 15Tariff 12Tariff 12Tariff 15&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 15&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 15Tariff 2Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 6Tariff 17&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 17Tariff 4Tariff 4Tariff 6&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 15&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 11Tariff 5&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 22Tariff 8Tariff 8Tariff 22&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 25Tariff 6Tariff 6Tariff 25&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 3Tariff 27&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 15&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 4Tariff 7Tariff 7Tariff 4&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 23&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 6Tariff 4Tariff 4Tariff 6&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 27&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 7Tariff 6Tariff 6Tariff 7&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 27&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 3Tariff 11&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 12Tariff 27Tariff 1Tariff 12&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 19Tariff 6&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 16Tariff 16Tariff 16Tariff 12&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 6Tariff 22&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 22Tariff 4Tariff 4Tariff 22&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 24Tariff 5Tariff 5Tariff 24&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 27Tariff 1Tariff 1Tariff 27&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 22&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 31Tariff 31Tariff 6Tariff 31&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 25&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 6&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 6Tariff 16Tariff 16Tariff 6&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 6Tariff 1Tariff 1Tariff 6&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 8&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 11Tariff 4&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 11Tariff 1Tariff 1Tariff 11&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 15Tariff 4Tariff 4Tariff 17&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 7Tariff 17&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 4Tariff 5Tariff 5Tariff 4&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 5Tariff 23Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 11&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 6Tariff 22Tariff 3Tariff 6&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 6Tariff 5Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 25&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 6Tariff 11&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 13Tariff 13Tariff 13Tariff 22&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 10Tariff 15&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 15Tariff 8Tariff 8Tariff 15&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 16Tariff 16Tariff 16Tariff 16&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 3Tariff 17&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 7Tariff 22&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 22Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 24Tariff 24Tariff 2Tariff 24&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 27Tariff 4Tariff 4Tariff 27&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 28&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 6Tariff 4&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 12&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 6Tariff 22Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 6Tariff 2Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 12&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 15&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 11Tariff 4Tariff 4Tariff 11&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 7Tariff 12&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 15Tariff 22Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 17Tariff 10Tariff 10Tariff 17&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 22Tariff 2Tariff 2Tariff 22&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 8Tariff 5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 26Tariff 8Tariff 8Tariff 26&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 11&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 30Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 5Tariff 22Tariff 4Tariff 5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 3Tariff 5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 6Tariff 15Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 5Tariff 6&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 28&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 25Tariff 22Tariff 1Tariff 25&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 26Tariff 4Tariff 4Tariff 26&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 28Tariff 28Tariff 5Tariff 28&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 33Tariff 3Tariff 3Tariff 33&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 4Tariff 19Tariff 19Tariff 4&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 10Tariff 4&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 5Tariff 6Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 6Tariff 4Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 11Tariff 7&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 6Tariff 7&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Tariff 9Tariff 2Tariff 2Tariff 9&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 6&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 12Tariff 6Tariff 6Tariff 12&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 15Tariff 17Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 15Tariff 5Tariff 5Tariff 17&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 17Tariff 6Tariff 6Tariff 17&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 18Tariff 6Tariff 6Tariff 18&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 1Tariff 22&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 23Tariff 5Tariff 8Tariff 23&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 6Tariff 25&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 28Tariff 1Tariff 1Tariff 28&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 2&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 5Tariff 1Tariff 1Tariff 5&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 5Tariff 7Tariff 7Tariff 5&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 15Tariff 6&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 3Tariff 6&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 9&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 12Tariff 5Tariff 5Tariff 12&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 16Tariff 15&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 3Tariff 12&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 15Tariff 5Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 17Tariff 19Tariff 19Tariff 17&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 17Tariff 6Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 27&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 22Tariff 16Tariff 16Tariff 22&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 22Tariff 27Tariff 4Tariff 27&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 4Tariff 25&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 7Tariff 27&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 4Tariff 17Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 4Tariff 1Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 7Tariff 5&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 1Tariff 6&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 8Tariff 6&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 6&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tariff 9Tariff 9Tariff 9Tariff 9&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 28&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 6Tariff 12&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 11&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 15Tariff 22Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 6Tariff 4&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 17Tariff 8Tariff 8Tariff 17&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 22Tariff 1Tariff 1Tariff 22&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 4Tariff 22&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 5Tariff 23&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 26Tariff 6Tariff 6Tariff 26&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 28Tariff 28Tariff 19Tariff 28&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 9&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 12&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 5Tariff 22Tariff 3Tariff 5&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 2Tariff 5&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 6Tariff 10Tariff 10Tariff 6&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 25&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 12Tariff 2Tariff 2Tariff 12&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 17&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 15Tariff 3Tariff 3Tariff 15&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 10Tariff 17&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 17Tariff 4Tariff 4Tariff 17&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 17&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 22Tariff 10Tariff 10Tariff 22&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 16Tariff 22&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 25Tariff 7Tariff 7Tariff 25&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 4Tariff 27&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 17&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 4Tariff 8Tariff 8Tariff 4&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 27&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 6Tariff 4Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 30&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 5Tariff 7&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 30&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 11Tariff 5Tariff 5Tariff 11&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 12Tariff 12&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 17&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 15Tariff 25Tariff 4Tariff 15&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 17Tariff 15Tariff 6Tariff 17&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 5Tariff 22&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 22Tariff 3Tariff 3Tariff 22&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 8Tariff 23&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 26Tariff 10Tariff 10Tariff 26&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 12&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 30Tariff 30Tariff 2Tariff 30&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 17&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 5Tariff 22Tariff 8Tariff 5&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 4&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 6Tariff 15Tariff 8Tariff 6&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 4&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tariff 7Tariff 15Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 28Tariff 2Tariff 2Tariff 28&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 10&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 12Tariff 10Tariff 10Tariff 12&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 15Tariff 17Tariff 7Tariff 6&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 15Tariff 5Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 17Tariff 7Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 18Tariff 18Tariff 18Tariff 18&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 1Tariff 26&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 23Tariff 8Tariff 8Tariff 23&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 7Tariff 25&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 28Tariff 5Tariff 5Tariff 28&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 4&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 2Tariff 4&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 5Tariff 2Tariff 2Tariff 5&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 5Tariff 8Tariff 8Tariff 5&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 16Tariff 6&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 15&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 2Tariff 7&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 5Tariff 5&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 5&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 5Tariff 4&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 25&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 6Tariff 11Tariff 6Tariff 6&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 9&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Tariff 7Tariff 4Tariff 4Tariff 7&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 15&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 1Tariff 12&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 6Tariff 5&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 15Tariff 17Tariff 8Tariff 17&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 15Tariff 6Tariff 2Tariff 15&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 17Tariff 7Tariff 7Tariff 17&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 19Tariff 19Tariff 19Tariff 19&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 2Tariff 22&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 23Tariff 23Tariff 2Tariff 23&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 16Tariff 25&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 28Tariff 6Tariff 6Tariff 28&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 5&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 5Tariff 10Tariff 10Tariff 22&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 5Tariff 3Tariff 3Tariff 5&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 4Tariff 6&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 6Tariff 7Tariff 7Tariff 6&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 17&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 11Tariff 6&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 11Tariff 2Tariff 2Tariff 11&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 12Tariff 5Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 21Tariff 21Tariff 6Tariff 21&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 2Tariff 25&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 4Tariff 6Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 6Tariff 1Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 6Tariff 22Tariff 4Tariff 6&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 26&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tariff 9Tariff 9Tariff 1Tariff 9&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 10Tariff 10Tariff 10Tariff 7&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 12Tariff 12Tariff 4Tariff 12&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 18Tariff 18Tariff 2Tariff 18&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 22Tariff 4Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 8Tariff 25&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 25Tariff 5Tariff 5Tariff 25&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 2Tariff 2Tariff 2Tariff 34&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 4Tariff 15Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tariff 6Tariff 4Tariff 1Tariff 6&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 11Tariff 11Tariff 11Tariff 11&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 14Tariff 14Tariff 14Tariff 14&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 12Tariff 15&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 15Tariff 8Tariff 8Tariff 17&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 17Tariff 1Tariff 1Tariff 17&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 6&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 8Tariff 15&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 22Tariff 6Tariff 6Tariff 7&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 25Tariff 2Tariff 2Tariff 25&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 27Tariff 6Tariff 6Tariff 27&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 3&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 4Tariff 4Tariff 7Tariff 4&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 15&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 6Tariff 22Tariff 7Tariff 6&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 6Tariff 3Tariff 3Tariff 6&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 15&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 17&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 12Tariff 3Tariff 3Tariff 12&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 18&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 1Tariff 15&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 15Tariff 3Tariff 3Tariff 17&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 16Tariff 17&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 17Tariff 5Tariff 5Tariff 17&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 22&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 22Tariff 11Tariff 5Tariff 22&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 18Tariff 22&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 25Tariff 25Tariff 1Tariff 25&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 5Tariff 27&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 22&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 4Tariff 9Tariff 4Tariff 4&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 28&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 6Tariff 5Tariff 5Tariff 6&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 34&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 7Tariff 7Tariff 7Tariff 4&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tariff 9Tariff 5Tariff 5Tariff 9&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 11Tariff 15Tariff 11Tariff 11&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 15Tariff 10Tariff 10Tariff 15&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 15Tariff 15Tariff 15Tariff 4&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 15Tariff 1Tariff 1Tariff 4&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 17Tariff 17Tariff 5Tariff 17&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 17Tariff 2Tariff 2Tariff 17&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 1Tariff 1Tariff 1Tariff 7&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 22Tariff 22Tariff 8Tariff 22&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 22Tariff 6Tariff 6Tariff 22&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 25Tariff 4Tariff 4Tariff 25&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 27Tariff 27Tariff 1Tariff 27&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 3Tariff 3Tariff 3Tariff 4&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 4Tariff 6Tariff 6Tariff 4&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 5Tariff 5Tariff 5Tariff 17&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 6Tariff 3Tariff 3Tariff 17&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 6Tariff 6Tariff 6Tariff 17&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 7Tariff 2Tariff 2Tariff 7&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tariff 8Tariff 8Tariff 8Tariff 22&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Decliners:ok]' type='palette'>
            <map to='#00aa22'>
              <bucket>0</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Decliners:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Tariff ID_June:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tariff 19&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tariff 17&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tariff 18&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tariff 20&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.1ggtc2o1r8jjrl15gbpoj12gk4br' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:AL10001:no:A1:AL10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Phone_Number' ordinal='0' />
                  <column datatype='string' name='Tariff ID_June' ordinal='1' />
                  <column datatype='real' name='Voice_Onnet_Revenue_June' ordinal='2' />
                  <column datatype='real' name='Voice_Onnet_Duration_June' ordinal='3' />
                  <column datatype='real' name='TOTAL_MB_June' ordinal='4' />
                  <column datatype='real' name='Total_Data_revenue_June' ordinal='5' />
                  <column datatype='real' name='TOTAL_REVENUE_June' ordinal='6' />
                  <column datatype='string' name='Tariff ID_July' ordinal='7' />
                  <column datatype='real' name='Voice_Onnet_Revenue_July' ordinal='8' />
                  <column datatype='real' name='Voice_Onnet_Duration_July' ordinal='9' />
                  <column datatype='real' name='TOTAL_MB_July' ordinal='10' />
                  <column datatype='real' name='Total_Data_Revenue_July' ordinal='11' />
                  <column datatype='real' name='TOTAL_REVENUE_July' ordinal='12' />
                  <column datatype='string' name='Tariff ID_Aug' ordinal='13' />
                  <column datatype='real' name='Voice_Onnet_Revenue_Aug' ordinal='14' />
                  <column datatype='real' name='Voice_Onnet_Duration_Aug' ordinal='15' />
                  <column datatype='real' name='TOTAL_MB_Aug' ordinal='16' />
                  <column datatype='real' name='Total_Data_Revenue_Aug' ordinal='17' />
                  <column datatype='real' name='Total_revenue_Aug' ordinal='18' />
                  <column datatype='string' name='Tariff ID_Sep' ordinal='19' />
                  <column datatype='real' name='Voice_Onnet_Revenue_Sep' ordinal='20' />
                  <column datatype='real' name='Voice_Onnet_Duration_Sep' ordinal='21' />
                  <column datatype='real' name='TOTAL_MB_Sep' ordinal='22' />
                  <column datatype='real' name='Total_Data_Revenue_Sep' ordinal='23' />
                  <column datatype='real' name='Total_revenue_Sep' ordinal='24' />
                  <column datatype='integer' name='Decliners' ordinal='25' />
                  <column datatype='real' name='Offnet_Duration_June' ordinal='26' />
                  <column datatype='real' name='Offnet_duration_July' ordinal='27' />
                  <column datatype='real' name='Offnet_duration_Aug' ordinal='28' />
                  <column datatype='real' name='Offnet_duration_Sep' ordinal='29' />
                  <column datatype='real' name='Voice_All_Revenue_June' ordinal='30' />
                  <column datatype='real' name='Voice_All_Duration_June' ordinal='31' />
                  <column datatype='real' name='Voice_All_Revenue_July' ordinal='32' />
                  <column datatype='real' name='Voice_All_Duration_July' ordinal='33' />
                  <column datatype='real' name='Voice_All_Revenue_Aug' ordinal='34' />
                  <column datatype='real' name='Voice_All_Duration_Aug' ordinal='35' />
                  <column datatype='real' name='Voice_All_Revenue_Sep' ordinal='36' />
                  <column datatype='real' name='Voice_All_Duration_Sep' ordinal='37' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='weekly_KPI_performance_analysis' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='DAY(Date)' />
        <param name='target' value='weekly_KPI_performance_analysis' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='weekly_KPI_performance_analysis' type='sheet' worksheet='data1_weekly_q1' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Tariff_Id' />
        <param name='target' value='weekly_KPI_performance_analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>1. Which tariff has the highest revenue on January, 2020?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_407857256002510848]' derivation='Sum' name='[sum:Calculation_407857256002510848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#d5d5d5</color>
                <color>#bfbfbf</color>
                <color>#aaaaaa</color>
                <color>#959595</color>
                <color>#7f7f7f</color>
                <color>#6a6a6a</color>
                <color>#555555</color>
                <color>#3f3f3f</color>
                <color>#2a2a2a</color>
                <color>#151515</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Revenue: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]</rows>
        <cols>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok] / ([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]))</cols>
      </table>
      <simple-id uuid='{B1A98DAE-18FC-444A-9AE1-23E9A9357E6B}' />
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>2. Which tariff has the highest data revenue growth in last month?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' direction='DESC' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[pcdf:sum:Data Revenue:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Revenue: </run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Revenue: </run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[pcdf:sum:Data Revenue:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{2D0650AA-52BB-4392-9EDB-C267296E4725}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>3. For which tariff data revenue is higher than other types of revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OnNet Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OffNet Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</rows>
        <cols>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk] + ([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OnNet Revenue:qk] + [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OffNet Revenue:qk]))</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book'>Tariff 13 has higher data revenue  than other type of revenues.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='28734963.714285713'>
                  <node-reference>
                    <axis>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.5'>
                  <node-reference>
                    <fields>
                      <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Tariff 13&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-1' y='248' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A66E4E42-DF42-4591-A0FE-A6BD5CDCD97D}' />
    </worksheet>
    <worksheet name='Sheet 27'>
      <layout-options>
        <title>
          <formatted-text>
            <run>50%</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='More than 50%' datatype='boolean' name='[Calculation_423901380827901959]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Voice_All_Duration_Sep] &lt; 0.5*[Voice_All_Duration_June]' />
            </column>
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_423901380827901959]' derivation='None' name='[none:Calculation_423901380827901959:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380827901959:nk]'>
            <groupfilter function='member' level='[none:Calculation_423901380827901959:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380827901959:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0CC2FDDE-D23E-459C-8C06-208E6DD79CA3}' />
    </worksheet>
    <worksheet name='data1_daily_q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Total revenue.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_407857256002510848]' derivation='Sum' name='[sum:Calculation_407857256002510848:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{20B3D701-013E-44A4-8EFD-C1230249C6D0}' />
    </worksheet>
    <worksheet name='data1_daily_q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Revenue proportion of each tariff.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_407857256002510848]' derivation='Sum' name='[sum:Calculation_407857256002510848:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Name:nk]' />
              <groupfilter function='member' level='[none:Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' />
              <wedge-size column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
              <size column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{86124ED9-2F4C-475B-A7DD-F68726233D94}' />
    </worksheet>
    <worksheet name='data1_daily_q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Compare tariffs on daily.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='All Subscriber' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average Revenue Per Subscriber&quot;'>
              <calculation class='tableau' formula='&quot;Average Revenue Per Subscriber&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='all_subscriber_calculate' datatype='real' name='[Calculation_1143632845695307776]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Average Revenue Per Subscriber&apos; THEN [Calculation_785878150086328322]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Voice Revenue Per Subscriber&apos; THEN [Calculation_785878150087778308]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Data Revenue Per Subscriber&apos; THEN  [Calculation_785878150088794117]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average On-net Revenue Per Subscriber&apos; THEN [Calculation_785878150089248774]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Average Off-net Revenue Per Subscribe&apos; THEN [Calculation_785878150089527303]&#13;&#10;END' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='Average Revenue Per Subscribe' datatype='real' name='[Calculation_785878150086328322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_407857256002510848] / [Number of Revenue Subscribers]' />
            </column>
            <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_785878150086488067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage] + [OnNet Minutes of Usage]' />
            </column>
            <column caption='Average Voice Revenue Per Subscriber' datatype='real' name='[Calculation_785878150087778308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_785878150086488067] / [Number of Voice Subscribers]' />
            </column>
            <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_785878150088794117]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue] / [Number of Data subscribers]' />
            </column>
            <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_785878150089248774]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue] / [Number of OnNet Subscribers]' />
            </column>
            <column caption='Average Off-net Revenue Per Subscriber ' datatype='real' name='[Calculation_785878150089527303]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] / [Number of OffNet Subscribers]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Data subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OffNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OnNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Revenue Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1143632845695307776]' derivation='Sum' name='[sum:Calculation_1143632845695307776:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845695307776:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#e9f3f2' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845695307776:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845695307776:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845695307776:qk]</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:qk]</cols>
      </table>
      <simple-id uuid='{9F687B0F-7033-4AEA-9DE8-019CB37E5974}' />
    </worksheet>
    <worksheet name='data1_daily_q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voice and data revenue for that tariff as tooltip.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_785878150086488067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage] + [OnNet Minutes of Usage]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_407857256002510848]' derivation='Sum' name='[sum:Calculation_407857256002510848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_785878150086488067]' derivation='Sum' name='[sum:Calculation_785878150086488067:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]'>
            <groupfilter function='level-members' level='[dy:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' />
              <size column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<Sheet name="data1_daily_q4_tooltip" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total Voice Revenue :	<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_785878150086488067:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Data Revenue: 	<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Date: <[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='2.6408839225769043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_785878150086488067:qk]</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]</cols>
      </table>
      <simple-id uuid='{69B4CAD6-A655-43D3-90B5-4FE74E69F6CF}' />
    </worksheet>
    <worksheet name='data1_daily_q4_tooltip'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_785878150086488067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage] + [OnNet Minutes of Usage]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_785878150086488067]' derivation='Sum' name='[sum:Calculation_785878150086488067:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[Tooltip (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action - Sheet 27]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[Tooltip (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='993' />
                <format attr='maxwidth' value='993' />
                <format attr='minheight' value='626' />
                <format attr='maxheight' value='626' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_785878150086488067:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_785878150086488067:qk] + [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Data Revenue:qk])</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{888A8BF8-964E-4D85-B051-98F86B8814FC}' />
    </worksheet>
    <worksheet name='data1_daily_q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Portion of data revenue in the total revenue for each tariff.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Portion [Data / Total]' datatype='real' name='[Calculation_1143632845726089218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue] / [Calculation_407857256002510848]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1143632845726089218]' derivation='Sum' name='[sum:Calculation_1143632845726089218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' direction='DESC' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='163' />
            <format attr='color' value='#59a14f' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845726089218:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>&lt;</run>
                <run bold='true' fontsize='10'>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_1143632845726089218:qk]</run>
                <run bold='true' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{EEE081E8-F18B-4D5C-9E75-89D7DE46B728}' />
    </worksheet>
    <worksheet name='data1_weekly_q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>KPI list as Parameter.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of usage&quot;' value='MB of usage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_407857256012201985]' derivation='Sum' name='[sum:Calculation_407857256012201985:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' field-type='quantitative' max='140851403' min='-13311615' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]</cols>
      </table>
      <simple-id uuid='{1EA4FECB-0FBC-466B-8166-B86F8F012856}' />
    </worksheet>
    <worksheet name='data1_weekly_q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Weekly time plot of each KPI.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of usage&quot;' value='MB of usage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_407857256012201985]' derivation='Sum' name='[sum:Calculation_407857256012201985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[twk:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' value='false' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ac00ac' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]</rows>
        <cols>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{F7D43B4F-20B4-4A81-B615-1235AC276BB3}' />
    </worksheet>
    <worksheet name='data1_weekly_q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>List top 5 tariffs for each KPI in the last week and growth rate for each of them.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of usage&quot;' value='MB of usage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth Rate' datatype='real' name='[Calculation_573927492425117696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Calculation_407857256012201985]) - LOOKUP(SUM([Calculation_407857256012201985]), -1)) / LOOKUP(SUM([Calculation_407857256012201985]), -1)) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_407857256012201985]' derivation='Sum' name='[sum:Calculation_407857256012201985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_573927492425117696]' derivation='User' name='[usr:Calculation_573927492425117696:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_407857256012201985])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tariff_Id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='26' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' direction='DESC' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' scope='cols' value='false' />
            <encoding attr='space' class='1' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='1' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]' value='false' />
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk:2]' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-color' value='#ac00ac' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.042983423918485641' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ac00ac' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ac00ac' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok])</rows>
        <cols>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk] + [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk])</cols>
      </table>
      <simple-id uuid='{2E65712F-E5E5-4B75-9D54-F73C2D445692}' />
    </worksheet>
    <worksheet name='data1_weekly_q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Performance of each KPI in the last week.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of usage&quot;' value='MB of usage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Revenue Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_407857256012201985]' derivation='Sum' name='[sum:Calculation_407857256012201985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Revenue Subscribers]' derivation='Sum' name='[sum:Number of Revenue Subscribers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='26' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' value='false' />
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]' value='false' />
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]' value='false' />
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]' num-steps='5' type='interpolated' />
            <encoding attr='color' center='831020' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' max='884714' min='777427' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' />
              <tooltip column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]' />
              <lod column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>KPIList_parameters_calculation:	</run>
                <run bold='true' fontcolor='#1b1b1b'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Revenue Subscribers:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.95552486181259155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]</rows>
        <cols>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok] / ([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok] / ([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok])))</cols>
      </table>
      <simple-id uuid='{CF7EC17A-536C-42B1-BA34-455425E76414}' />
    </worksheet>
    <worksheet name='data1_weekly_q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the last week”. If it&apos;s positive write &quot;Good news!!! &apos;KPI&apos; increased % in the last week.&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.1i0ke1j1dn4t3m1aovcr70inuts6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of usage&quot;' value='MB of usage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i0ke1j1dn4t3m1aovcr70inuts6'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_407857256002510848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column caption='KPIList_parameters_calculation' datatype='integer' name='[Calculation_407857256012201985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Total Revenue&apos; THEN [Calculation_407857256002510848]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;Minutes of Usage&apos; THEN [Number of Voice Subscribers]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OnNet Minutes of Usage&apos; THEN  [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;OffNet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF  [Parameters].[Parameter 1] = &apos;MB of usage&apos; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth Rate' datatype='real' name='[Calculation_573927492425117696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Calculation_407857256012201985]) - LOOKUP(SUM([Calculation_407857256012201985]), -1)) / LOOKUP(SUM([Calculation_407857256012201985]), -1)) * 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Revenue Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Revenue Subscribers]' derivation='Sum' name='[sum:Number of Revenue Subscribers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_573927492425117696]' derivation='User' name='[usr:Calculation_573927492425117696:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_573927492425117696]' derivation='User' name='[usr:Calculation_573927492425117696:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='-6.1685913466644777' />
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='-5.5118900450238799' />
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='-4.0848228919176135' />
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='-1.4178210072317838' />
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='1.1779748401732315' />
              <groupfilter function='member' level='[usr:Calculation_573927492425117696:ok]' member='13.800266777459491' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='26' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</column>
            <column>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]' value='*0.0%▲;0.0%▼' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]' value='19' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]' value='false' />
            <format attr='text-format' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]' value='*0.0%▲; 0.0%▼' />
            <format attr='display' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]' value='false' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]' />
              <text column='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1204420328140259' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]</rows>
        <cols>([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok] / ([federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok] / [federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]))</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
                    <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</field>
                    <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]</field>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]</field>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</field>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]</field>
                  <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>25</value>
                <value>3135897</value>
                <value>26</value>
                <value>2020</value>
                <value>13.800266777459491</value>
                <value>13.800266777459491</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{478DFAF0-145F-41DF-9F95-C74BDB96C793}' />
    </worksheet>
    <worksheet name='data2_q1_a'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease more for the subscribers with higher MB of usage?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Bin_MB_of_Usage' datatype='string' name='[Calculation_423901380812156928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Calculation_884957342238679042] &lt;= 100 THEN &apos;0-100&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 500 THEN &apos;101-500&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 1000 THEN &apos;501-1000&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 1500 THEN &apos;1001=1500&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &lt;= 5000 THEN &apos;1501-5000&apos;&#13;&#10;ELSEIF [Calculation_884957342238679042] &gt; 5000 THEN &apos;&gt;5000&apos;&#13;&#10;END' />
            </column>
            <column caption='AVG MB of Usage' datatype='real' name='[Calculation_884957342238679042]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_MB_June]+[TOTAL_MB_July]+[TOTAL_MB_Aug]+[TOTAL_MB_Sep])/4' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Decliners]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Non-Decliners' />
                <alias key='1' value='Decliners' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Total_MB_Aug' datatype='real' name='[TOTAL_MB_Aug]' role='measure' type='quantitative' />
            <column caption='Total_MB_July' datatype='real' name='[TOTAL_MB_July]' role='measure' type='quantitative' />
            <column caption='Total_MB_June' datatype='real' name='[TOTAL_MB_June]' role='measure' type='quantitative' />
            <column caption='Total_MB_Sep' datatype='real' name='[TOTAL_MB_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_423901380812156928]' derivation='None' name='[none:Calculation_423901380812156928:nk]' pivot='key' type='nominal' />
            <column-instance column='[Decliners]' derivation='None' name='[none:Decliners:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[Decliners]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:sum:Number of Records:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380812156928:nk]</rows>
        <cols>([federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Number of Records:qk] + [federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:sum:Number of Records:qk:2])</cols>
      </table>
      <simple-id uuid='{0750A0BB-A1A3-4FD0-8144-4408A63E9737}' />
    </worksheet>
    <worksheet name='data2_q1_b'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease more for the subscribers with higher revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Total Revenue' datatype='real' name='[Calculation_217861647759536128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_REVENUE_June]+[TOTAL_REVENUE_July]+[Total_revenue_Aug]+[Total_revenue_Sep])/4' />
            </column>
            <column caption='Bin_Avg_Total_Revenue' datatype='string' name='[Calculation_423901380819046402]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_217861647759536128]&lt;5 THEN &apos;&lt;5&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=10 THEN &apos;6-10&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=15 THEN &apos;11-15&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=20 THEN &apos;16-20&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&lt;=25 THEN &apos;21-25&apos;&#13;&#10;ELSEIF [Calculation_217861647759536128]&gt;25 THEN &apos;&gt;25&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Decliners]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Non-Decliners' />
                <alias key='1' value='Decliners' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Total_Revenue_July' datatype='real' name='[TOTAL_REVENUE_July]' role='measure' type='quantitative' />
            <column caption='Total_Revenue_June' datatype='real' name='[TOTAL_REVENUE_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total_revenue_Aug]' role='measure' type='quantitative' />
            <column caption='Total_Revenue_Sep' datatype='real' name='[Total_revenue_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_423901380819046402]' derivation='None' name='[none:Calculation_423901380819046402:nk]' pivot='key' type='nominal' />
            <column-instance column='[Decliners]' derivation='None' name='[none:Decliners:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[cnt:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:cnt:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380819046402:nk]</rows>
        <cols>([federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[cnt:Number of Records:qk] + [federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:cnt:Number of Records:qk])</cols>
      </table>
      <simple-id uuid='{C68F5D19-B1FE-4C2E-A032-50382098E313}' />
    </worksheet>
    <worksheet name='data2_q1_c'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease more for the subscribers with higher minutes of usage?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column aggregation='CountD' caption='Bin_Avg_Total_Duration' datatype='string' name='[Calculation_423901380823453700]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Calculation_884957342240784387] &lt;= 100 THEN &apos;0-100&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 500 THEN &apos;101-500&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 1000 THEN &apos;501-1000&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 1500 THEN &apos;1001=1500&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &lt;= 5000 THEN &apos;1501-5000&apos;&#13;&#10;ELSEIF [Calculation_884957342240784387] &gt; 5000 THEN &apos;&gt;5000&apos;&#13;&#10;END' />
            </column>
            <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Decliners]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Non-Decliners' />
                <alias key='1' value='Decliners' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Voice_All_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_423901380823453700]' derivation='None' name='[none:Calculation_423901380823453700:nk]' pivot='key' type='nominal' />
            <column-instance column='[Decliners]' derivation='None' name='[none:Decliners:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[Decliners]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:sum:Number of Records:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380823453700:nk]</rows>
        <cols>([federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Number of Records:qk] + [federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[pcto:sum:Number of Records:qk:2])</cols>
      </table>
      <simple-id uuid='{1B41E245-5E99-4469-ABFF-F65653A0502E}' />
    </worksheet>
    <worksheet name='data2_q2_aug'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease for all top 10 tariffs with highest voice revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column datatype='string' name='[Tariff ID_Aug]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Revenue_Aug]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_Aug]' derivation='None' name='[none:Tariff ID_Aug:nk]' pivot='key' type='nominal' />
            <column-instance column='[Voice_All_Revenue_Aug]' derivation='Sum' name='[sum:Voice_All_Revenue_Aug:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Voice_All_Revenue_Aug])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tariff ID_Aug:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_Aug:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_Aug:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]</cols>
      </table>
      <simple-id uuid='{975DDE79-9CD2-4AFC-AD65-C598264BB6C7}' />
    </worksheet>
    <worksheet name='data2_q2_july'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease for all top 10 tariffs with highest voice revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column datatype='string' name='[Tariff ID_July]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Revenue_July]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_July]' derivation='None' name='[none:Tariff ID_July:nk]' pivot='key' type='nominal' />
            <column-instance column='[Voice_All_Revenue_July]' derivation='Sum' name='[sum:Voice_All_Revenue_July:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Voice_All_Revenue_July])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tariff ID_July:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_July:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_July:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</cols>
      </table>
      <simple-id uuid='{C07E532F-9AA8-408A-9301-161B36C0B33B}' />
    </worksheet>
    <worksheet name='data2_q2_june'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease for all top 10 tariffs with highest voice revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Change' datatype='real' name='[Calculation_423901380826972166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Tariff ID_June]=[Tariff ID_Sep] &#13;&#10;THEN ([Voice_All_Duration_Sep]-[Voice_All_Duration_June])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Tariff ID_June]' role='dimension' type='nominal' />
            <column datatype='string' name='[Tariff ID_Sep]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Revenue_June]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_June]' derivation='None' name='[none:Tariff ID_June:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_423901380826972166]' derivation='Sum' name='[sum:Calculation_423901380826972166:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Voice_All_Revenue_June])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tariff ID_June:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Calculation_423901380826972166:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Calculation_423901380826972166:qk]</cols>
      </table>
      <simple-id uuid='{1758BFC8-C292-43D9-AC5B-DE13D913A1FA}' />
    </worksheet>
    <worksheet name='data2_q2_sep'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did voice duration decrease for all top 10 tariffs with highest voice revenue?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column datatype='string' name='[Tariff ID_Sep]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Revenue_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_Sep]' derivation='None' name='[none:Tariff ID_Sep:nk]' pivot='key' type='nominal' />
            <column-instance column='[Voice_All_Revenue_Sep]' derivation='Sum' name='[sum:Voice_All_Revenue_Sep:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Voice_All_Revenue_Sep])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tariff ID_Sep:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_Sep:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Voice_All_Revenue_Sep:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</cols>
      </table>
      <simple-id uuid='{B8AE2BB9-B0F8-40D5-9117-15EA6CCDBC12}' />
    </worksheet>
    <worksheet name='data2_q3_aug'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'> Which tariff &apos;s voice duration decreased most?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
            </column>
            <column datatype='string' name='[Tariff ID_Aug]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_Aug]' derivation='None' name='[none:Tariff ID_Aug:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884957342240784387]' derivation='User' name='[usr:Calculation_884957342240784387:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[usr:Calculation_884957342240784387:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]</cols>
      </table>
      <simple-id uuid='{F828D77E-BD92-446B-874C-664C53A596B3}' />
    </worksheet>
    <worksheet name='data2_q3_july'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'> Which tariff &apos;s voice duration decreased most?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
            </column>
            <column datatype='string' name='[Tariff ID_July]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_July]' derivation='None' name='[none:Tariff ID_July:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884957342240784387]' derivation='User' name='[usr:Calculation_884957342240784387:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[usr:Calculation_884957342240784387:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</cols>
      </table>
      <simple-id uuid='{95B5CDF1-5749-4EFB-9D45-926336AF0B2E}' />
    </worksheet>
    <worksheet name='data2_q3_june'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'> Which tariff &apos;s voice duration decreased most?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
            </column>
            <column datatype='string' name='[Tariff ID_June]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_June]' derivation='None' name='[none:Tariff ID_June:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884957342240784387]' derivation='Sum' name='[sum:Calculation_884957342240784387:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Calculation_884957342240784387:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</cols>
      </table>
      <simple-id uuid='{0B6A2B15-A121-4195-95F4-C061CD35221F}' />
    </worksheet>
    <worksheet name='data2_q3_sep'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'> Which tariff &apos;s voice duration decreased most?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Total Duration' datatype='real' name='[Calculation_884957342240784387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Voice_All_Duration_June]+[Voice_All_Duration_July]+[Voice_All_Duration_Aug]+[Voice_All_Duration_Sep])/4' />
            </column>
            <column datatype='string' name='[Tariff ID_Sep]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_All_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_All_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_Sep]' derivation='None' name='[none:Tariff ID_Sep:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884957342240784387]' derivation='Sum' name='[sum:Calculation_884957342240784387:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Calculation_884957342240784387:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</cols>
      </table>
      <simple-id uuid='{7B110EE9-D269-481B-B694-EAFD81FCC5B9}' />
    </worksheet>
    <worksheet name='data2_q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Did tariff 5 subscribers’ voice duration decrease more for those with higher MB of usage?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Voice Revenue Analysis)' name='federated.01awkot1yz4ubz1b1l8wv0yj6mf6' />
          </datasources>
          <datasource-dependencies datasource='federated.01awkot1yz4ubz1b1l8wv0yj6mf6'>
            <column caption='Avg Voice Onnet Revenue' datatype='real' name='[Calculation_217861647760400385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Voice_Onnet_Duration_Aug]+[Voice_Onnet_Duration_July]+[Voice_Onnet_Duration_June]+[Voice_Onnet_Duration_Sep])' />
            </column>
            <column caption='AVG MB of Usage' datatype='real' name='[Calculation_884957342238679042]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TOTAL_MB_June]+[TOTAL_MB_July]+[TOTAL_MB_Aug]+[TOTAL_MB_Sep])/4' />
            </column>
            <column caption='Total_MB_Aug' datatype='real' name='[TOTAL_MB_Aug]' role='measure' type='quantitative' />
            <column caption='Total_MB_July' datatype='real' name='[TOTAL_MB_July]' role='measure' type='quantitative' />
            <column caption='Total_MB_June' datatype='real' name='[TOTAL_MB_June]' role='measure' type='quantitative' />
            <column caption='Total_MB_Sep' datatype='real' name='[TOTAL_MB_Sep]' role='measure' type='quantitative' />
            <column datatype='string' name='[Tariff ID_June]' role='dimension' type='nominal' />
            <column datatype='real' name='[Voice_Onnet_Duration_Aug]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_Onnet_Duration_July]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_Onnet_Duration_June]' role='measure' type='quantitative' />
            <column datatype='real' name='[Voice_Onnet_Duration_Sep]' role='measure' type='quantitative' />
            <column-instance column='[Tariff ID_June]' derivation='None' name='[none:Tariff ID_June:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884957342238679042]' derivation='Sum' name='[sum:Calculation_884957342238679042:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_217861647760400385]' derivation='User' name='[usr:Calculation_217861647760400385:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[usr:Calculation_217861647760400385:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]' />
              <text column='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Calculation_884957342238679042:qk]</rows>
        <cols>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[usr:Calculation_217861647760400385:qk]</cols>
      </table>
      <simple-id uuid='{232DD27A-BCE6-4447-81E3-222137517A6A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='daily_KPI_performance_analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Benton Sans Book' fontsize='20' italic='true'>Daily Revenue Performance Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3ebf3d0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='All Subscriber' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average Revenue Per Subscriber&quot;'>
          <calculation class='tableau' formula='&quot;Average Revenue Per Subscriber&quot;' />
          <members>
            <member value='&quot;Average Revenue Per Subscriber&quot;' />
            <member value='&quot;Average Voice Revenue Per Subscriber&quot;' />
            <member value='&quot;Average Data Revenue Per Subscriber&quot;' />
            <member value='&quot;Average On-net Revenue Per Subscriber&quot;' />
            <member value='&quot;Average Off-net Revenue Per Subscriber&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98178' id='16' param='vert' type-v2='layout-flow' w='99002' x='499' y='911'>
            <zone h='6378' id='17' type-v2='title' w='99002' x='499' y='911'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91800' id='7' param='horz' type-v2='layout-flow' w='99002' x='499' y='7289'>
              <zone h='91800' id='5' type-v2='layout-basic' w='99002' x='499' y='7289'>
                <zone h='45902' id='3' name='data1_daily_q1' w='32797' x='499' y='53187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45846' id='9' name='data1_daily_q2' w='24511' x='74990' y='7289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45902' id='13' name='data1_daily_q4' w='41694' x='33296' y='53187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45954' id='14' name='data1_daily_q5' w='24511' x='74990' y='53135'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40640' id='10' name='data1_daily_q3' w='74491' x='499' y='12547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='5258' id='12' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='74491' x='499' y='7289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontname='Benton Sans Book' fontsize='20' italic='true'>Daily Revenue Performance Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='89' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98178' id='88' param='vert' type-v2='layout-flow' w='99002' x='499' y='911'>
                <zone h='6378' id='17' type-v2='title' w='99002' x='499' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5258' id='12' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='74491' x='499' y='7289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45846' id='9' is-fixed='true' name='data1_daily_q2' w='24511' x='74990' y='7289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40640' id='10' is-fixed='true' name='data1_daily_q3' w='74491' x='499' y='12547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45954' id='14' is-fixed='true' name='data1_daily_q5' w='24511' x='74990' y='53135'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45902' id='3' is-fixed='true' name='data1_daily_q1' w='32797' x='499' y='53187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45902' id='13' is-fixed='true' name='data1_daily_q4' w='41694' x='33296' y='53187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F0820FE7-8475-4268-8B96-A90286ABC370}' />
    </dashboard>
    <dashboard name='weekly_KPI_performance_analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#3b5c7f' fontname='Benton Sans Book'>Weekly KPI performance Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6aa' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI list' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
          <aliases>
            <alias key='&quot;MB of usage&quot;' value='MB of usage' />
          </aliases>
          <members>
            <member value='&quot;Total Revenue&quot;' />
            <member value='&quot;Minutes of Usage&quot;' />
            <member value='&quot;On-net Minutes of Usage&quot;' />
            <member value='&quot;Off-net Minutes of Usage&quot;' />
            <member alias='MB of usage' value='&quot;MB of usage&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98178' id='23' param='vert' type-v2='layout-flow' w='99002' x='499' y='911'>
            <zone h='5922' id='24' type-v2='title' w='99002' x='499' y='911'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92256' id='14' param='vert' type-v2='layout-flow' w='99002' x='499' y='6833'>
              <zone h='92256' id='7' param='horz' type-v2='layout-flow' w='99002' x='499' y='6833'>
                <zone h='92256' id='5' type-v2='layout-basic' w='99002' x='499' y='6833'>
                  <zone h='42791' id='3' name='data1_weekly_q1' w='49501' x='499' y='12307'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20025' id='9' name='data1_weekly_q2' w='49539' x='499' y='55098'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='23966' id='10' name='data1_weekly_q3' w='49539' x='499' y='75123'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43991' id='11' name='data1_weekly_q4' w='49463' x='50038' y='55098'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48265' id='12' name='data1_weekly_q5' w='49501' x='50000' y='6833'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' fixed-size='44' friendly-name='KPI list' h='5474' id='8' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='49501' x='499' y='6833'>
                    <formatted-text>
                      <run>KPI list</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#3b5c7f' fontname='Benton Sans Book'>Weekly KPI performance Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='98' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98178' id='97' param='vert' type-v2='layout-flow' w='99002' x='499' y='911'>
                <zone h='5922' id='24' type-v2='title' w='99002' x='499' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='44' friendly-name='KPI list' h='5474' id='8' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='49501' x='499' y='6833'>
                  <formatted-text>
                    <run>KPI list</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48265' id='12' is-fixed='true' name='data1_weekly_q5' w='49501' x='50000' y='6833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42791' id='3' is-fixed='true' name='data1_weekly_q1' w='49501' x='499' y='12307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='152' h='20025' id='9' is-fixed='true' name='data1_weekly_q2' w='49539' x='499' y='55098'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43991' id='11' is-fixed='true' name='data1_weekly_q4' w='49463' x='50038' y='55098'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='23966' id='10' is-fixed='true' name='data1_weekly_q3' w='49539' x='499' y='75123'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C259CBF3-ED6A-4B82-A957-89EEC61D51F8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' maximized='true' name='data1_weekly_q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:OffNet Revenue:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCD107AC-7CA8-4FD8-9348-126F5B3F934F}' />
    </window>
    <window class='worksheet' name='data1_weekly_q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A07E3E16-2686-4F6D-8F4B-81D7E42CB68A}' />
    </window>
    <window class='worksheet' name='data1_weekly_q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[io:Set 1:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:qk:2]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{963A7DA1-F58D-402F-AF87-278EA5822B4A}' />
    </window>
    <window class='worksheet' name='data1_weekly_q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='5' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256012201985:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[qr:Date:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[wk:Date:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5032ED2C-C684-4369-A76C-8401C46E68A3}' />
    </window>
    <window class='worksheet' name='data1_weekly_q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[usr:Calculation_573927492425117696:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Number of Revenue Subscribers:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[qr:Date:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CFB331C-D7F4-45B6-A2B5-3194DC6ED732}' />
    </window>
    <window class='dashboard' name='weekly_KPI_performance_analysis'>
      <viewpoints>
        <viewpoint name='data1_weekly_q1'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='data1_weekly_q2'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='data1_weekly_q3'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='data1_weekly_q4'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='data1_weekly_q5'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{CFBE89C7-99BA-4B5C-80D7-1390D6B24FB8}' />
    </window>
    <window class='worksheet' name='data1_daily_q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C212B03-ADFA-4E1C-A8A2-409D58303C4B}' />
    </window>
    <window class='worksheet' name='data1_daily_q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C72D285-3231-4A26-A5DD-F77D1779105C}' />
    </window>
    <window class='worksheet' name='data1_daily_q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='132'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F01B3668-FCA3-423D-91B4-C87AE224D56F}' />
    </window>
    <window class='worksheet' name='data1_daily_q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[:Measure Names]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[dy:Date:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Calculation_785878150086488067:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Data Revenue:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:OffNet Minutes of Usage:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18D744E1-7783-4DA7-84BA-4D7933CBA31F}' />
    </window>
    <window class='worksheet' name='data1_daily_q4_tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC4A1956-9FF5-4F9D-93C8-90C2B699165A}' />
    </window>
    <window class='worksheet' name='data1_daily_q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{698B362B-1D35-4F3F-A4EF-953FB177254A}' />
    </window>
    <window class='dashboard' name='daily_KPI_performance_analysis'>
      <viewpoints>
        <viewpoint name='data1_daily_q1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='data1_daily_q2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='data1_daily_q3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='data1_daily_q4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='data1_daily_q5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D4AFCC47-D176-48B2-9A75-851C8E6F3CDE}' />
    </window>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[sum:Calculation_407857256002510848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Tariff_Id:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0100F66F-08C5-42DF-8383-FCC12759006B}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[mn:Date:ok]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0A3725F-1B35-47F3-A313-62DA2DFB6D7F}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0ke1j1dn4t3m1aovcr70inuts6].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB2F9318-EB94-425F-8E63-4A7B6AE5CDEA}' />
    </window>
    <window class='worksheet' name='data2_q1_a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380812156928:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0F4C7655-9519-4006-8ECB-85AA4BBA0F5D}' />
    </window>
    <window class='worksheet' name='data2_q1_b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380819046402:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[sum:Decliners:qk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[usr:Calculation_423901380819046402:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEAAB44F-7ABD-4181-8702-F9A8B1226DFD}' />
    </window>
    <window class='worksheet' name='data2_q1_c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380823453700:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_884957342246039557:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Decliners:ok]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Phone_Number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39AE77B9-EFB6-4D1D-BEBE-3AA02C6E87B9}' />
    </window>
    <window class='worksheet' name='data2_q2_june'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Aug:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6210E73C-A72F-42AE-B62C-EA7149996E88}' />
    </window>
    <window class='worksheet' name='data2_q2_july'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56BFB5C1-1B80-4617-88DD-7B6982ABC166}' />
    </window>
    <window class='worksheet' name='data2_q2_aug'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D5F2486F-F2AF-45E6-A833-2C7A60AB0E93}' />
    </window>
    <window class='worksheet' name='data2_q2_sep'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EFD0148-5C58-419A-BCCE-55DB6FA6072C}' />
    </window>
    <window class='worksheet' name='data2_q3_june'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_July:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53EDEBB3-769B-4571-A895-E92EA3F7CD6E}' />
    </window>
    <window class='worksheet' name='data2_q3_july'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{572C7981-E638-4A94-9DB7-047DB58A01F2}' />
    </window>
    <window class='worksheet' name='data2_q3_aug'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B40CDE89-F396-4DD2-BAFF-95BA190BCF2B}' />
    </window>
    <window class='worksheet' name='data2_q3_sep'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_Sep:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25F690DF-28C3-46D4-83C6-BC41162777C5}' />
    </window>
    <window class='worksheet' name='data2_q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Tariff ID_June:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FBED6BB-6DA5-4BED-BA04-8CA7E5897793}' />
    </window>
    <window class='worksheet' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380819046402:nk]</field>
            <field>[federated.01awkot1yz4ubz1b1l8wv0yj6mf6].[none:Calculation_423901380827901959:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA9C34F-91A6-42BF-BAD4-64FCDD1901BF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q1' width='192'>
      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
      sKP5/17W0khxCGW0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
      iAzv/q61aAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 27' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAFoElEQVR4nO3aX2/aZhiG8dsvBgwmkJIma9qumvb9v8+kqV2XNmkaQggEDAaMvZNpHdtB
      W4WWJvf1O0qQkR4OLr1/IKqqqhJgKux7AGCf7hXAarXSarXa1SzAdxff581lWe5qDmAv2ALB
      GgHAwnIx03iabb1WVRUB4OHJRh/02+szvX79WotVofV6rcUiV7FeaTrLVFWl8sVcs2yuqpLK
      Yq03b88UB+l2PFG5KXQ3namqqvudAYD9iPTT6Qv1wlyXN7caDS708pdf9fFyqN5Boqv5XJPx
      VIftoLWeq5cE1esNxXGk4eBOs8lIaZrqMstZAfBwLVdL1euxnhw/U/8gUS1O9KTf13K+UNo5
      UL/X0XJVKNRitVotJc2GJGk+z5TlS8W1QAB4eOJmS+PrS93OSx33u+qkbSnUlSZB784Hevb8
      WJPRUJeTlU56LUlSmqaSIh0cdPT89FRVJTWbDUX3+SY4z3NJUpIkO/lgwE6Ua92MFzrqdz/7
      KGcAPD6hrqN+/cse/cajAD+0f7ZAs9lMm83mq968Xq8lSfX6l9UG/Gg4A8AaWyBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBY2wrgbnyjwfWNyqra1zzAdxX/+5/JXabjp3398fadXp4+1TxbKOkc6G40
      VLPTUyNUmk6nStKeDrvpvmYGdmZrBYhCUNLuqBlL09uhsiLSbDRQp3+iu5trjSdjHR6daHw7
      3Ne8wE797wywKZZaFZVCXNdR/4lCiLQpS1VVJUWRQiSJHRIeiaiqPm34R9dXWhSVTk5OVK6X
      qjUS1aJKw8GVks4TzcYDFVVNR8cnajfryvNckpQkyd4+AHAfWwF8TpbN1GqnClEkSQSABy/+
      /COfpGnnW80B7MXWGaAsVjo7e6fZdKrV5tPCUCwzTWb533/PNZktvu+UwDeytQKMBhea5qV6
      q6VqrVQfL861CU0ddxvK16XK4Z0mk1s1D5+rx2KAR2ArgG63p7LdVJkNlYWgstFVq8y1Kiup
      3GiaF3px+kyjfF/jAru1fQ0aBYUoUqjVVE/ayqc3ypaF4hAUajVV64UuPw4kRfuZFtixr7oF
      +i9ugfDQ8WM4WNsKYJnPVZR8zQsfWwFMJ2PdDIeaZguVm0JXV1falJXyPNd4PNFmvdTVYMiv
      RfFobG+BykKh0dbtzbUuzt+r2+3o/OKj/nzzu8pQ07v35+qmsT5c3e5pXGC3tgMIsTrtlkII
      WuYLXQ9HajQb6vT66ndTLRdzDUd3ajZqexoX2K2tANqdA8W1SL1uVz+/eqVIUquVqNvtSor0
      6tXPUhTUSpr7mRbYMa5BYY1rUFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFj7Cx2Jm6ZdpxULAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='daily_KPI_performance_analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q1' width='192'>
      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
      AASK5v8BFi4OJIEAJXAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAVIElEQVR4nO3dW2wc133H8e+ZMzO7yzspUSRFS5YtS5VkWRJly7fUqR8SByga58UF3Bho
      jKYPLdrnNnUL1ECLBHlI8tQCbZImsJO0qZXUseXYsmRJli3TduzIulCyRIqkxItILm8rarmX
      2Znpw3JXpHinyF2J8/8ABC+znJkFzu/c5uyM8n3fR4iAMgESiQSSAxFEBiCFXwSWUewTEKKY
      JAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQA
      ItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQ
      JAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi0CQA
      omi6u7vZv38/77zzDqlUatr2vr4+XNfl17/+NX19fbzyyivE43FSqRQHDhwgk8kQj8c5dOgQ
      ra2tSzoH81bfhBBLddddd7F27VoefPBBYrEYp06doq6ujqGhIVKpFHV1dcTjcbq7uzl//jx9
      fX0opUilUpSWluK6Lu+99x61tbXU1dUt6RykBRC3hVgshlKK1tZWYrEYX/7ylxkZGWHDhg00
      NTWxa9cu9u7dS0lJCRUVFViWBcDo6CiNjY0cPHhwSceVFkAUlWmaKKXo7+9HKYVlWVRVVaG1
      zhfy3GtMM1tcr169ypkzZ/A8jwceeIBPP/2UioqKJR1f+b7vj4+PL9sbEuJOIi2AuGNl3Ayp
      TJqUkybhJKksK8UyLLRhotEopebdhwRA3NacjEPvaD/tA1e4MtRDR7SLK0O9XB3tZzyVwPU9
      XM/F83z+/s+fpaaiAqUUCoVWJhFdQokuI6JLKdXllJjlhI0IhsoOfyUAYkbxeBzP8zBNk0gk
      MmWb7/tkMhkymQwtLS1s2bKFjo4O9uzZg+/7OI6Dbdv4vk8qlSIUCi2oNgZwPZfekX4+7TzD
      Jx2nOXX5HFdj/bieN+f/KRSe7+Hhgp/9W8Z3SHkJRp2hKa+M6BIqzRqq7bUSADGz9vZ2Dh06
      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
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q4_tooltip' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d5Qkx33n+UlfvqqrzXT3eAsMMAM7FADCkCBoQIIyK1GixKX8yr09nZ5I
      7b23e3c6o5Pu3j5Jt3snrU7knna1Woqe0okUKVqABEgABDDAYLxt721Vl00TcX9kVnbXTHej
      p7rHdn7f6wfkZGXELyPjGz8Tv4hQpJSSCBE2KdQbLUCECDcSeuN/SqUSnudds4rq9TqWZV2z
      8iNEaAXK9TKBCoUC2Wz2elQVIcKaEZlAETY1IgJE2NSICBBhUyMiQIRNjYgAETY1IgJE2NSI
      CHCD8PVzZ6g6zo0WY9MjIsANQv/8LLbn3mgxNj0iAtwg2K6HJ6I0rBuNiAA3CK7wEFEe4g1H
      RIAbBFeIiAA3ASIC3CA4wkNIcaPFuC0g3dZ9qYgANwiuJ/AiDbBuSCGY+Yv/p2USRAS4AfCE
      QCAjE2gjICXu2Di02JYRAW4AJBIkuNdw/cWmgZRIx44IcLNDSklj6YUnJAIZmUAbhXWEkyMC
      XCfM/NmfI6tVADwpQMrICd4gSMeh1XVdLRNACo/SwgK244KUVEolXE/gOja266v2erUajXL4
      o783O4sMTB5fA/ih0Ag3Fvpb/2R5lIrzzBbLjI6fZWdXhoKtUi7XaEt4zNUtHjx8gOe++hXu
      f/rH6EpGa4Gl4yKD3B8pZaABlh8cHM/D0LTrKd4NgVcq4Y6OYh040HohUvoRoBYH2pYJkM5l
      GRkcQjPizBUq3HH4Xk4eP4aixbAUj0pxkkRbLwCe5yGEwF1HvPaWRmD/e54HrovtOggJtuNe
      0SaO8PhPR1/h1448jHKNZKmfPIl16NC6ywFAaV3K+qU+qi+/jLZnT+tiuC5SStxaDVW/+u7c
      MgEcR3Lg0GGOvvY6WsKk5rg0NHpXe5rXTg6zszcPgKZpqKqK3oKAtwOklCiKgqZpfhsoih8J
      UriiTVxXUnEcdE1DWUfnWlEW16P46c/Q/b//EYraugtYPXYMb3qG1FPvarkMV9NQpFxXv/Db
      FjRdR7ueBKgUZxmZmKGjZxvbu7KcO3+W3h27sVSXVDrNNlshn46jmre/Kl8TpEDavgkkpETC
      sv6RkJL6NdWUEjbA9xDlMu7MzDpFEbBR79piSLllAmTbt5Bt3xJeH7y7WaXu2bW91aJvPzTs
      1ABe4AMs5wRLKam5DhKujQlEkDogBKxDA2yIHI7bcvQmLENIv5wWCRCFQa8ngg4vhECyfBTI
      8QSOdwtEh4QANiDCd4P9wogA1xEyWADjCoGmqMtGLhzh+f7BtZLBcWADCCZdLzTplsNkaYGh
      wvxbFCKRGxQKXk2W1RAR4HphyYf2pCSm6zjLfPyG/e+Ka5cmIYVoOWy4Vjx76QLnpiZXl8N1
      wHWZr1bX4ffIdb1LRIDrBOl5IARSSkaLBXRNXXYewA5s2euVKFexbY6ODLf28Ao+jO15XJyZ
      xlkDiV3P47m+C5yaHG9NBil9zdqiJtmccckbBOm6eFLytXOnaU8k/ZSIy+AsmS2+JhDC/wsI
      9oPBfl4dGaLq2jy68yri8Z6HdK/s4N+5dJ58PIG3xMl3PI83xkZ4cOt2Bufn0FWVbCyGBlyc
      nuLU5DhJ01zXa7WaDr3pCHBpdpqpcpmHtu+8vhUH/blYq+IJQVw3ls0Gtb21mUDz1SqjxQKd
      qRQJw1xzBypXq8hAEynAXLVCxbF57tJF7t7SQy4WX9vrLJF9vlbl028c5ecfOMJIocCxsRF2
      5/MhmV8eHuA7F86TTyT4/kAfZdumLRbng46D4nkUajWmy+U11bvR2HQm0ESpxDfOn7nGsfbL
      IKXvfArJdKXMg1u38yPbdyxr5jTkeisT6OLsNMfGR3l5aICXBvtXqVo2hRpfHuqnbNeZq1YA
      f3R2PUHZthktFhicn2O2Ulnje/kj/CvDg6iqwvHxMRzhUbJt7u3eGvo40+Uy9/b00j83i+16
      zFerTFfKHBsdQZUSQ1Up1PxEwe8P9F19jpQkTDO5Wmw6ArjCDzOOFN8iQnENIF2XuWqV3kwm
      NBMuR6PTLO0EF2ammCwtAHBiYowLM9NMlkqUbZua63J6aoLj46O4QmC7Lq8MDzJRWkBIyQsD
      lzg/M8VkqYSQkprrongeL/RdDOuxdA1PCsYWirw8NMDnjr8ekuZyAl3+PlJKBufneKB3GzOV
      Mo7n8duPPM6WVAon0GY116EzmaJYq+F4HoValSNbtzNUmEf1BF2pNEJKFuo1zk5NMPxW0aMm
      IRpzLNc5F+hWheO57Gvv4MLMNHvyHde8Pld4PHvhHAeDD7RQr7EllUbXNBzPwws6upQSW3ih
      E9wggJCCzx1/g6wV54P772DoBy9ysqONhGHgCkHSNCnUavzD6RMYmsZUucyZqQleHR7iUHcP
      U6USb4yNMl0u8f4DBxGuR0w3mKtWeW1kCEd4pEwLVwhK9Tp2YJJMlBboTmf45oWz7M13sLe9
      ua0aNnfJrlO2bbpSaS7NziCkJGmYlKQdkrliO7QnkgzMz4aO8ZZUmtN2naSu8/4DBxlbKHJq
      coK653FiYoxdbfmra+irCBp4QqAFk4CbhgBCSn8EEoLD3T28ONjPg1vLtCeS17Te0WKR71w6
      z9ZqlUS9jq0aGJqGqihIKXlxsJ/zM1NYuo6mqOQTCQxVC00gxxPkYnHet/9OXjl1gt4Xvs9D
      v/0vqTo2JyfGcTwPR3g4nsf56WmEFDy19wAxXef5/ksAdCZT3NHRxWBhDs2xUYB37dnHS1MT
      eEKQsixUVaFs27hCcF/PVs7PTNGdzjBdLjM4P0fcMOhJZ1AUBSElA7Mz9ArB18+fZVs2R8o0
      qTi2T3NFwQwIDr4GaIvHqTgOdddFVzXSVgxTQkJV2dGWR0jJ+Zkp2uMJhubnQ60zXlqgO5V+
      y7yotZpArvD466Ov8IsPvA1d1TaPCTRaLPCZN4/ieP6I99iuPbw0OECxVmO2ukabF7BdlzNT
      E1yanQm3NlnOXi/ZdS7NztA/N8vWTBbVE4zNzWB7HqamkzJNSrZNse47gNPlMoVaFdt1SZpm
      qBnKtk3CNMknEsyXy6hCsL+9g/fuvxNT16m6DpamIwMTwg5SqROG3yFtz+Opvfs5snUbVcfB
      9QR4HmnTolSvIyXEdYOORJKK4+AIjzs6uzg3PeXnJXku+zu6+Nq50yGhirUaJyfGka6L7bo8
      unM3pqb760AC59rQNOxAw9meRy4ep2zbCCmxdJ24YZAwDHRFRVEUcvE489UqSdMkE7MYmJ+j
      7rp88pUXqazQuYWUXJqduaoQ6GixyFBhPoyybRoCDM7PUazXw1z73W15xhYKnJoc55vnz4Y2
      6OnJCf7L0VeYLJWanq86Do7n8droMN84f5bPHX+dN8ZG+OHwAM9dusDpyUXbtWzX+faFc3yv
      7yJVx+Edu/eSME0myyUcz8PUNHRVwxUeddflx+46xK8eeYiy49v0ccMIQ6QVxyahG8R0g5rr
      oglJTDcAMDWNUr1O2rLIxuLYnheWnzTNoMMJNEUhZhhUHSeMMvkd1EUiiRsG7YkkVcfG9Ty2
      pNIoKDzffxHH8ziydRtP7tnPbLWClJJTk+PomorEn7k2VA1T06h7LigKavDXyHfSVNUniOeb
      eJauYek6KdPCQKICuVicQq2GBB7esYvXR4cR+M9/8pUXGZyfC7/FSLHAq8ODVB2Hz735+mJo
      FzgzNUHfbHOSXmMwqToOf3vsNVSUcLZ98xCg4I8oNddFV1V0VcMRgrrncWZqgjfHRvn88WPM
      VMokTJPPHn+9qSE/few1vnzmJFXH4Ynde/nFB36E05MTVGyH7w/08eUzJ/j2xXPMVSv86QvP
      MVSYp2zXcYSHpemoikKpVsMVIqhfxRECx/NIGiZJ08JQNb/DG0Y4QlUch4RpoqsqEomORFV9
      c8DSdCqOQzYWI2PFsD030DB+KrWCguN5aKpKPCCQsG2k66IrCk6gwZKmScq0EPiTWLqq8vSB
      OxlfWKDu+fInDIOKY1Os13m+/xKH8h14jhO+jxmM+I3wqg8lJCSApiiU7TqG6puAbQGRwSez
      KzykhG2ZHGMLRYSU9Kaz/OTd9/CVMyexPY9PvfEaXzj+Bt+6eJ75WjXUvtVaDSklLw0N8OrI
      UFiu43l84pUXOTs1iSM82hNJulIpX3MLsXkIUHNcDE2jbNvoqoqmqnhC4Hgu+9s7+dq509Rc
      x1f57R38+MFDvDjUD/iNOFOpMLFQDEe8rBWjYtvUXZenD9zJR+87gu15nJwc58k9+/m1tz0C
      +B3Y1DRwXcqVCjXXvzYCG7nueVhBHruhatRcF0vXl4xaNjHdQFMVkigY4OcRAXHDwPZc0laM
      bCyGK0TYIVXFX6tiex5aYGZYmk6xXgPAVDW84Pe96Szd6QyqolJ3/XaKGwYlu46UElVVSRhm
      qAV7Mhl60hmq9TquJ9C1oPyG3Iri2+yKP0eQNPw5ipRpETdM4oaJqihkY7HFzFRACdZJWLqO
      JyWleh1L19iRa6MtnmCsWGCitMDP3HM/Bzo6mSyV6M1kAPjy6ZMU6zUW6nUG5+cYWyjiCcH3
      +i/iCcHXz5+hWKthqBqaqiKEb95tCgLIwJbNWBYlu46haegNAgjB/b3b+Nhj78QOYuKGqpGL
      xanYNuDb85lYDAnUHAdL9ztI1fVt5rZ4gnwiget5VGybXDyOHkQZ/A6vhykCJdvGDDSCT8h6
      OEKauk7JrmNpemgCVR2HpGmiKipxw8CSoAUaIGmaGJpGyjRJWxaOENie34GVYBy2Aw0AYOm6
      vyW7EEgkKdOk7roc6u5hf3uHb78HzmbcMCgH7w+EhK26DvFg5K44Nq4UISHTpoWuqigspnKf
      nBjnQGeXfz9m0ZFM8uF77gMga8WaopdJ0wzLysZizFWrGKrfNmnL8slkmvSkM+RiMWarZdQg
      sU86DlPlEpqi8BN3H+YLJ45Rtm2+c/E8O3JtdCZTzFYr6Jqvfd3g228KAoBPgoRhslCvBSOk
      P0rVHAdD821SRVGouf61/8EFF2en+adzZ9iWyYWLVYzAxNBVlYptY2paaOM2VL5vB/sjaqOD
      u45DqV5H1/xmTxom87UaevCRM5bFfLWKqeuhaq84DgnD73Apy0JX1LCT5GJxDFUjHphQCr69
      q6CEI3LFtkPCJAwDsSQVIm3FFu11IGYYGAFZYroRRnHAJ50I1io0NJbrOGH7AbTF4xiaHpJI
      AUYXCuwOQpop08LSNNriCb8OVQ1ypHzixQ0jLLsjkWSkOB+2XdI0ma1WsDQ9aKsY0+UyRlBX
      1rKYqVQwNZ29+Q5ysTijCwU0RWV7EKWarVRC7Vuy69TdTaIBwB9oGpEIM2jEhOHH0I2gQ2qK
      EnZwU9OwhcdIoYDtubxj916fIJ4bjkqGplF27JBQhqaxUK9jBp3A0FRqruvb7NJfibVQr4X1
      pyw/UtPogInAVEgYhh+twXeoG//eYcUwWIxdJ00TS9c5vKWHI1u3+yO864YdMGPFEEjUgDBJ
      00RbkgqdicUWR2xFYUsqjblkWWHCMHE8DwXf7BJSUrF9H0XaNrbt4EkRyp+NxcMO25Ch6iwS
      JmvFmhf7X5bukTKt8Pn2RJLxhYXw9xkrxlS5FA4euXiC6XIpvJ8zLSZLi9fZWIyZSoU7u7q4
      r2crmVicmUo5dNj/6rWXmSyVNgcBJH7ILGvFAELzJG7oFGrVcFRRFYWq62Jpvp2o4Jsw9/Vs
      I2VZJAyD+Wr1CptdX2JiFOu18H7StCjUquiKinRdPwEsIAv4H1Vr2Mv4HVINbPWGCVR3XWJB
      eV2JJMoSmyFjxTA1jUwsRiYWC2PvDfOjYVJoQfkpc8nuHK4bmCyLa4+3Z3NhXQD5RCLskI15
      i4rjhFGouuc0hYBz8XjYARsy1F03bN+kaYbkD7+N6yKDd00YZtiWHckkI8XC4mBh+tqxUVY6
      HPEDE8kwmCgvYOnBtWkxW6lgBO+XMk2mK2VMTcfUdMq27ZtQtIhqaZ6TJ09yvm+QWnGaN948
      Qd/QGNPjAwyNzQKSM8feoGTfBDtBBNP5uXgcUMKPFDdMivVaeK0qftRCXdqha7WwU6RM3w7V
      QjNBZ6FeX1KewdwSQqVM03cSg99ndKNpBMxYMX8yJuiAScNEV30V3WQCBYluncmUv5glcBpT
      ltXUoTKBSaMs6fANcw0WR3zw1wRkYrFwRAXY1ZZn35IZ3/ZEItQIiqIQ0w1mKxXigUmmeIv2
      f0O+tvhiMp0f2RGLndRarN+XoXn+JG1Z4eCRi8UpLPk2vglUDa8ThknVddDl4rtPlUohOVOW
      xUzQ4Rtt0TCBGgPCujSAZsQ5ePAg8zOTTIyOk8jm6NnSSbFUZWpqFOHZDPUPUXFu/P6XMvhr
      iydCcwf8CaCybYcmjaaoftgw+KjmEhPHnZgkZRi+3djoYJY/mdR4PmGYgQ3fUMNxVFUJCZM1
      zZAc4HcIQ1syQlu+U6tramh/L3U6Y41nA3K0xRM8c8fBsLyU5Xf4xhv6TvLi+yZNE23JpFF6
      icnRKO+xJSnRnclUaM41np+tlv1OJiWqlE0mU286w/sP+PIoikJPOkvSNMPnd+fzvHf/HYsf
      xnX9v0CmpGmGznsi8EesJSbQXLUSdmg/MKBgNcxHRaG0JKCQsWJMV0rht0hbFsV6DVPXwjIm
      Sgutp0LousKbr7/G1p376czGWFgocezYMTrbkqRNjcH+ATqDlOMbuS+QVyjgBlvnpQ0TQ9VC
      ORKG4YfepC+bqihUHRsVieu6GKrKfLWGBsz+zd8Qe/QRnxzBu8R1HZAo0v99ojFaBtcpw/DJ
      IvzdD7LBCBjWH6Q/CM9DChFMeOko0g+9Oq6fOqApCq7r4tbrSNfFdZxwS5MtyVRYXsow0RQl
      bO+4rje9b1zTMQKH2K3VaGtrY09b+4rfpSOepC0WD+9bus5QYR5LVfHqdQCMJe9zObqSSabL
      pab7Sd0Ir0WQlu15HsJ16Uwk/XQM18VQ/MmzxrurEIzehM/HdCMcPDR807YhT9IwfBMpuI4F
      gQkNBV3xaTZdLrdOgIsn38DWEpRLC5heielCCUXzR6runi5+8NppDm1t94W7gfsC1U+foTQx
      jrmtm2TMIp9IhHJkYjE0RcXQdXRdx9A0ap6LaRjouk7cMBkuFohbFooQpAzDn9XU/fu5eMI3
      DUwTTVXJxRP+R9B1dE0nn0z5Tpeug5TkYjE6ksmw/mzct7GNwKTIxONszWQxAmdWDexXQ/fD
      pp7m+yWapi27CVQunvA1SBDRysTiWMG7AfRmczy5Zz/wNTRVI5dI8I49+1Zsu625HL3ZbDiC
      p60Y0+USmXgCVVVRhAjrWw53dG0hZcVWvK+qKkh/pljVdbakM033M7FY+C2swASLG2ZYXsr0
      5xTAN0dNVWAF3yafSCKkDH+fVuJoikrMMJGKX3ahVmudAHsPPYjniXDDp1yHh6ppgZOm8J53
      vt1XZtdgc6ergbRt6oGdbmk6v3rkofBexvJt4IZJY+l+PkvDTk0EmZaGquHUbTK6jhFMooFv
      V6rKoomTtmK+yUDDBjdDmxYgoah89L4j4XVbPM57998ZXqdMi3929z2MFOa5NDuNt0ycurG0
      cjk0HOFGh+1Mpri/d1t4v5ECMgFXRGBWwtIktIY5kzANHEAVssmEukIeK0amK7bifWnbTavT
      rnzeCk0gTVVJmGZTfXHDQAscaM0TxEw9bG+zkWqhLUbs4oaBrqkYQqM9nqRi260TQFU1VHVR
      mEWWBzHgG9zxl6Jeq4Vx/saIAX6URlebCQBLZlp1AyH9j+xISSKYRQx9gMuiGmnLwghmRcH3
      AR5Y0gGBkCzgt9EdwSRRA6qi0JFMMVEq8fzAJQjpFHR+ufIi8PZEosmJtXT9ivrD/Ulb2Ecn
      FiSxWdrigv5172HqrUyAtngi/CZqEMlZ2t5J08KQi/0sE4uFhFEVhYxlhQ47BE62puMKQTYW
      Y7JsbI506Fq9jqle+aHSVjMBUqaFpiqhBkhbftjQ0DSk59uVS3+fvMyJbERlGvcNTeOJ3XsR
      jRVWaxx144aBEJJXh4e4p7t38YYQyMBfWA4Jw+Rde99io9l1LDVOW1Y4qkrXpd2Kke7Z9tYP
      riaOXHkTmHfvPdCkQZNGs0bNWBZxN2gLz1/nYC4hTFs80fR9srE4pq7hCo1cPE7CMDbHPMBc
      uRSGEhuQQpAwDLak0uFE0Z58e9NMZsLwoxK6qoLnkVBV3rP/jqZ0ge25XFhm2rQ43N2z4o5u
      8ir24znU3c22bI6nD9x5jfYIvfqARMq06EqlwuuEpnGwa8sqT6xBhmAmeDkkAt+qgd359qYw
      69MHDrI77/uZ0vPYm29vWt/xwNZtbEmlw+sf2baDrmSKOzu38I7d+0iZ1ubQAMVymexli73n
      P/NZ0u95Nz9//9vCEXt7Nsfju3aHv0kYxmIYMUghWDoixw2Dnz50X3itqSrv2bckzLcOvGP3
      PlzPa+78QgQdpvXNpELt0UIZPekMP35wnbtKL0Vo/69NLT2yY1fTte+zLRL57Tt3N90/tKWn
      6XqpuWloGm3x+ObQAJrnkYs1O2PO8AiiWmuamDE0rWlrED8NWUNRVt4JbekItRLCTncVdreq
      KE0xdghkWMUHWBPWEYpu8qEu2++0ZQTatWVIiWIYLS2K/+Cdd28OAqhSkrl8uw/P9Q9XWwVJ
      wyRm6IQT+63u1hZ0lFY3cG2CEBuynWCrWwmGzy+ZwGq5DCH8znuDDgtMmObtTwDpOGhiMQ9o
      6b+zzMZOS6FrKtsyOZTg98ttBHXdsV4NcDPB81AMY12H3AF+qL1FMt72BEBKdqUzYUQn/Gfb
      eUsNYGo6P3fvA74dLmXrGqCBdY500nUCX6T1DhOaLRtxQN8GaCPFNBDBIp1WIG0HNZmIDspe
      DdlgBncppOuuaURvOMgI0bIGkBtlAjU6/no6nWwsIFmf/d7YE2i92kjv7sYdn1hXGaFMUuIV
      Cld15sCmIMByHVc6zlU5TtJzW959bCNOZLlclhuOjfBDHAdz3z6coaG3/vFqMExkvY60bcb/
      h99H1tauUTYFAXCX6biuu2a16Y90rG+0U9X1m1CN+jfAB9iQCM6S3RhaEwLMnTux+/tbL0IK
      rL17qV+8iKzX8aamqB17c83PbwoCLGen+k7wGjtBMPvasgYAFF1ftxMtAyKvRw5pO77juRE+
      wEaYQJ0deLNzLZuH0nHR2nKosRjOyCgoCvbAwJqf3xwEuKzDyGCz2qs2JVr9SLYDS3JS1ov1
      +RIy0EbrPJtrA0KX0vNQYjHUZAJvdu6tH1gFWj6PNz2NvqULd3L1gzmW4rYngD/dftloF8Sw
      1xoLl4GqX4/ZoGjqxvkC6z3iSNfXbwJ53qp5SWuC8FBUFWPHDuyB/nWJo2WzuJOTGL1bcaem
      1/zcigSQwuPE0Zc5ceIEwxPXfyflDYMUV4xWjQSsNZsSjZ2S10UArUmOVk5HDAm7zlSI9ZwP
      fC0QO3yI4t/9PZUfvtLC0347am1tOCMjaB3tICWivnqIu4EVW2Ls3A954fgQk8Nn+YdnX25B
      sJsHV3T0hgZYa4du2LotdjzpeXDZYvDC5z6/mCV61eWtY/R2PRTLuuazr9Wjr2MPvkV0R/rm
      mLVvH2g6pe98p2lgkEJQO3V69cHCcVBMEzWTwZ2ZQTEM1FSS0te/jghWrTVVedk3XJEA+Z49
      iMIwP3jlFI88sIEJUDcCl3WYMK9+rVEZb50mkPBQLLPp+eqrryEu2390TdD1dcfwlfXm3xBM
      QMViy5YjajVm/vITVF5efeCUroui66iJBFv+l/8JUa5gnz+/eL9aZfr/+r+bBh4RnCRTv3Ch
      qT319jzuyChqIoG+ZQvzn/4M7vh4WM/Mf/gLvIUFZj/5H5vkWpEAtWqFRCZHV0cbc4XiW7XH
      TY0roi9X6QM01Oy6TCBl0QeQnoc3P++viLoaCIGiaeuP4CgK61oY8BaQtZr/V61e1XOKZVL4
      4peQtoOwbepnzyIKhdCpla7L5B/+EV6xyNS//eOm+QM1k0GUyyiWhbFtG0iJNzPjHzx+/Djl
      7z2Pff48lR+8iN2/GCVakQDZrp185CMf4cMfeIy+4Y2ZqbthuNwHCDZxXasPEDp7G+TEejMz
      SMdGLEMA6brMf/Zzy6p96bqo2Qyi3Jrp5JfhoOayiNK1O5NL2jZqMnlVciqKgmpZOMMjeAtF
      St/8FjN/+UmQEmd4OCzXnZ6h+OWvoOg6zvhEYF5qqIkESiyGYpok3naE1LufwhkbZ+4//TX2
      xUsY27bhjIyiJpNNUaIV1wMUp4b4yrdeAEXlXe987xX3S/PT9A+PI1STfVvznOsbIZlrJ6lW
      KIsU+3f28NoLz7P3bY+Qi21cCLAVXG4zS9fzR9KrNANajb8L20aJx0IiTfyvf4Cs1ZcdIcVC
      idKzz5L96Q8tu55ab+/AnVl7lOPKCiRaNodX3ACtrmnLLvIR5TJaezuitroGCOckAqipFN7M
      DN7sHJWXf4goFlFTKexLfejd3aiWhSiXKT//Atmf/Gd4U1PoXV0oqoqaSPgksCy0bJb4A/dT
      fuH71E+fxtixk/iRB7EHhzB27sCdnPJ3sVaUlTWAqkKxuIBj15mcnr3ifjzdxl0H76BaKtI/
      MMxdh++hPD9NzRaUirN4boX5+TK2J644b+q6/rke0nHDa2HbiEoltMnXVEZAlFBzXOUfsjER
      5iKFCGPeola/4rfO1BSiVF6+LCRaex5veqb19gDUdCrMmWn5z/E7r8S/dqemwnteoYje3Y0o
      V1ZvF2QQX/CvlWDNxuwnPulrkUwG666D2Jf6mP2Lv6R28hQIgd7VhbFrF/bwMNXXX/eNOU1D
      y2VRYjGklKg5PyrkLZSwBwaw7r4LZ2QYNZkEJM7ICMLzVtYA9fIcHbvv5SeeOtK0+D1kr1Ph
      tWNnuOPQYUYvnkVRFgestoTJ2XP99O7a0dTxxQbnxKwFwvWQjhPWXf7e96i+dhYSkPUAACAA
      SURBVBQlHvfJsAaZhOdrDOm6Lb2DkAJME1Gt4pXLviml63iV8hXl2SMj4LoIp3l0BBC2g9bV
      iTMw2HJbSilREgm8sfF1fY/GdoZSCDzHYeJ/+yO6/vAPUONx3MK8L+fYKMLzVtwZREq/bZTG
      9ujJJLH770ONxXyTUwFjxw7Kzz+PNztLva8PpMTYthUlm8EZGsIdGyf1wWcQQqB1dICh+/v+
      t7X5M8Oui3XwIGpbG+7YOOb+/aBpTP3xn9D2m7+xMgGMeI7a1HE+97lL3HHfwxy5e2/T/f6L
      F9DjMcZGx+jt6eD4sWNYiQyGAe0dHbx27BwHetrQVMXfQybYPuV6o7ExbeXb3yF2+BBUa9gn
      TqJv3QqetyaZpKKgmMaaf3+FDIqClkjgFQpQqRC79x6s/ftRHPeK8uSsr21VIVAvu6cCpFLY
      5QruxUtUjx4l97MfvipZFNdFz2ZxLvU11e0tLKCl06s8eVk5iuLb3gCVCmJ+HqVWQ0ulEDOz
      GPk89WDn6Ua0R9E0qsfexDqwHzUe99vTNEM5tGQSdf9+0s98AG92jrm//mu0dJrko49ReeEF
      7HPn0bu6SBx5ED2ZRBSK/noPw0DTNNLvfS/Gtq3+vkmpJIppknznO8h+6Kd8EnoeWjKJyGSw
      z5xFjIyuQgDTZH56im07ehmeLHDk7ub7++6+v+n6gc6tTdePv/0INxPKL7yAMzCImssihUCN
      x9aeCySkH8dvdcR03MD5mkKUSmj5PFpHRxjSa0AKgSiVUAwDUa2hJhJXFKUmU4hajfqZM9h9
      /S2JoyYSyMA+r1+4QOmb38IeHKL7D/9g7ZNkQoCm+dGWYtF3UCcnkZ6gevR12n/7X1J67rsg
      BMW////Qu7tJveMJFr7+ddyxMawDB/xo1pL61FQSqWmoloXa042WzaLE42SefCeJIw8y/vu/
      T/rpp4k/8IBvUZTLvh/X2Kv17ruWvKSKls1ibN+GlsstOsvxOHq7v5De7utb3QlWs71U5iex
      9d6VfnZrQAhEoUi9cpbY4UPkPvwzoCjUz5xZcxGKYawvDGr6PodXKKCl06iWhTe96My60zPM
      /Nmfgaqh5nLI5RaJSImiqmj5NqrHjuHNzYfOXNPPbBtllZPjFdMIZkvrlJ59jvL3v4+i6Yhi
      EW3JLherQbquTyTXxZufRzEN3IlJ7EuXSD7xGHpHByiBiTQzg33xIrHDh5CVKvOf/RxqOn3F
      /IyaSCKW7KlhbN2K3tmJapro3VtQdCN8L0VR/MDCMpNd4M+8a/k2v57gWk0mUOJxtM5OlHgc
      e3BolYmwHYd4+NAOtt3xEB955rE1NcrNCsUw/MPb0mmcsTGsuw6SfOzRNU8oSc9Fy6QR5TLS
      81j4p6+3lNmp6DqiUERJJlESCcSSvPW5//yfka6HMzKMlkkv+2Gl64Kho7e3Y/f1+Y71Zbnv
      7uwsk//Hv11x9lS6Lqgasfvuo/L9HyDLZRTTQtbruNMzyz6z4vtYFrJu483OYu7bjzs+jn3x
      ErG77wZV9ec+PF+rueMTlL71bUS9hqzXSb/vvXizc01byBg93WhtbeF1+oPPYN15R9B2Bmoy
      iZpYXNutLdmiZTnoXVvQstnF36czqJaFuXs3yccexRkYWJkAdqVIX/8g/RfPcPrS8FU1zM0G
      fUsXaioV5J4P+NGGYLOrleAVCpS+/e3w2tcAHvXTp5n7m//K/Kc+hVjjRI/0XNA0FMvCnZkJ
      NUCjk0vPw52eJnbvPYhyBTWVWjWXRe/pIX7ffWhtuSvSKeonT+KMjq4YspXBZFry7W+n+sYb
      iEoFY5tvvnozPgHWOkeixOIUv/pVKi//kPgD9+FOTCLKZdRk0vf58m24M9N45TL5X/8130Sq
      1tCyGayDd/p2+RJH39i2jfg9hxfLVxd32cPQfbt+ydpupbEH0Ap+We7DP+2bWgHUXBY1mSB2
      8E6yH/op3xRe8eUAIfwD0i7fx/1WgnRclN5etFwWbUsnolBAjcVRdH3VRfF2/wAL3wwIIKT/
      oTyP+sVLxA7dzcI3v4V94eLahPD8TqeYBt7cHGoq5UehAgJJxwlHOEXT0DKZVVc1pZ56F22/
      8suomQyFL3yR+pL0AbuvH2nbyLdIBtPybXjzBaTjYnR3o7W34wYOePXoUcb/9b9p0lBL4WsX
      BTWVpPLCC7hj4yQeegivMI+o1cJwprFjB7VjbyJrNYytvXgzsyAlWmcneldXEJJcGxRFQctm
      UWOLa7u1VBJ03c+0Xe4dc7mmSJqWzYV1qvE4WiazWhQoRW93F6m2Dtqya48O3HSQAvOOOzDj
      8dCpVOKBBgi2TYcr9zK1L13Em54O8oZE0JC+45V88p3E33YEu7+f2OFD/tGjtv2WKlkxTZ+A
      8bhvUhUXsAcGkZ6LYpr+85qGmk4vmyYhbRvFMFEtCywLLZ2m8tLLGNu2Ye3fD4AoV/yQrV1H
      yuSKu8op8bjvB1QqWHffhZpMhj5J7fU38EplvJkZ1K1br3xYSlACrSgknf/dv0Jra/NnfjUt
      dErNnTuY+uM/Re/qRM1mffJn0nR+/GOoiQTx+++/qsxUNZNp0gBqKoWWWXvfzP3zn1vsA6aJ
      lsutrAGm+49zarjI3NgF/vG7P1xzJTcjrC1dpJ58J1q+zfcFYrFwP5rqK69S+cEPrnjG7utH
      icX8CSMhUDQdNR7Hm55BS6awDhzA7usDoHbsGBO//z/jjI1dUY6UktrZswAopoVXKPojpGEg
      XYfKSy8x/6lPoybiKMmEP6uZyTSZV0vt+aXdWctl8WZncScm/BVrQiCqVbS2NuqnTrPwj18N
      n1/4p6/jTk/72ZPBuQh6R7tP6EceIfXUu/BmZv3JuPFxEm87gj0wuGq7qqkUiqahd3b4TmYm
      7fsUjajM4cO0/9Zvond3++aMafoaIJtFUVXyv/UbviZeI2J33YXRuxiQMffswdyzZ5UnmqGl
      034GQABj+/ZVnOBt+5GFIV48epaH7rtrpZ/dEmjs/anl836+iKb5H0TXcYaGljVlxMICxvbt
      iEIBGlmLmQzu5ARKIo7R24s7OUn94kWqr7+BtW8v85/6NO7sHN7CwmI5pTKVF76P3r0FNRHH
      nZ5GiVk+AW0HUS5TP3XKH40SfuxajcehsYuzEMz82Z8va5Orwb6X7tgYM3/25xS+8EVkvYbW
      3k7lpZewL1ygfu4c3uwshb/7e+Y/89lg9PZppG/Z4ms2TUPr6MCdnfEn4coVYnfdhTM0hAgO
      oJaehzvTnBGgWhaKZYWRGT2fB0MPy1cMg+Tjj9Hxsd/17/d0oyzZnuZq9zxNvevJ0F8BSD/9
      PmL33NOkFa4G+V/95RUIIB2+8NkvoKU6edfb72d27hZeELMEaizuh+ca14kE7vR0U3KUfemS
      n2pr2xhbe5siI1o2izsx4X90XUeNJyh8/guUn32O2D33IKoVKs8/T/nZ53Dn5ih973ncyQli
      hw+RfOIJtEzGz2+J+z6IDNIyEo8+itbZ4fsAsRhqIuHPGAPe3ByVH74SaiKW2LtqNoNiWYhK
      ldqbx7H7+vztHjs7qJ06jTs9Q+m571L5wQ/8dxkdbbLrtfZ23yRQVb9jui724BB6ex5j5w6c
      kRHm//bTLHz1a1RefJGxj/9eE7mVRBx1idmn5fOo8URTbB9ADQhi9PQsO7exHiTf8QSJhx96
      6x8uA2XF3aGLI0zpvfQYc5wvpXjq4cPL/uxWg5KI0/l7Hwuv1UQCd2q6aWSrnT5D+bvfA0VB
      7+ykduwY9bPn/ChEOo1YKPl58IB5YD+148dBSvQtXf6uBOUyzvAw9RMnqASTb8aOHb5pE3SW
      UAsFTnH2J3+CzPvfjxqLhRGS6tGj/nFIY+N+x+zv9zXRkoU1WiaDls/7ZkV7e7C+QKKmUn5H
      8zxEoUDtxCmMnh5/3ezsLATHJOmdHSjx2JJIi0Hp698g+eQ70dryeDO+eVV58SUKn/8iiq7j
      zc0HK+QUVCvWZIM3CLXSyG5s29qkATYCqmWF36Ol55f9VzNNrD7ByIKKPXWRV0+sMdpxk0NR
      FPSuxR2ClUQcb2oSb3o6XD0kq/5oquXzaNkMpee+S+Hv/t6PQmQyYBhhJ8w88wHafumXQNfR
      e3qQnocolaifP0/lxZfxCkXc6Wn0Tl/rqKmU74MEW3z7JtUUairtO2XteXI//1H0jg60dAZn
      bAxnYhxz7x7c0Sv9Cy2Xw+jtxdi2FXP3Lj9y5LrE772H9t/8DTANvIUF6qdPo/f0oFgxRLUa
      2t3G9u1YgQ2tKApqIoEzOuqP1PEYimXijk/Q9ou/gDc3h3XXQbz5RWtAicebIjl6Pt8Up78c
      1sGDJB5qbbS+VljeA4m381u/8evXWZRrA+m6eCtEGtRkEndmlvTT72P6T/6UxEMPIcpl3IkJ
      ko8/5tvYrutHZALnVDEMaBzCkEiQevJJaseOoQZRGXdyEr27G723B3d6yo98HPY1qJrJ+PZ/
      I/elrY36mbNhGE/RtLBDWncdpH7qtD/JtGfPsqvHtI4OP+Xg299GOi7e7BzuxATm3r2+ifbl
      L/sJYUDs3ntxxsaC8GpwsFw+T/bnfnaxvGwO+8JFP0IU3Lf7+zF2bPdNuFwWUSqFkTF9yxbi
      Rx4Mnzf37llxAg5Ab28P0xBuFqzoBAunxle++Gm+9/z3OH5h5HrKtLEQArmCStba8wBkfvzH
      yP7shyk9911EtUb6mQ+Q/sD7UTP+oW2Jtx1B0XW0TMZP6tIXIwmKrtHxsd/17clMFndsjLZf
      +kVyH/m5IOpTQE0Fsedk80SOns+jGPqyEznWgf3YFy/iFYu+eVOv+46wsThmKUFEK/XUU6Tf
      916MrYGJERBea29H2nU6/82/xty+zU+/KBRRrCXpBEvaRsukgzwpnwB6R4evnQyD/L/4FbS2
      NrzZWWY/+R9xp6bR2/Oknnxy8flcjsQSQtwKWJEAI2d/SEHvRlam+N6rx6+nTBuOlfbwN3q3
      ophmOPJKx0FUKqSefCdqIuHnkqRSJJ94wl+QkUqGDvBSNMJ+WjaDNzvnO7mq6odNZ+f8uH1w
      X1tqMnR3o1ixptBcKFtPD+7EBN78POb2bX7i15IIzlKosRhqPI65Z7dvgjSiPJ2dKKaFdcCf
      I1BisWAicHmbWcvn/RBxIK++ZYtv4wflqdkMhS99CVEo3vDDDzcKKxKgZ9/9aMU+jp0b55kn
      H76eMm041BW+ldHd7XeGoAMqpoEol8KwnmpZpN77Hqy77yL1nnejpn1bnRVi11pbzk95CJ7X
      8m14MzNhh1ITCT8FIIDe2eFHSJYhgJpMgqrhjo/7yXFrSE0w9+1F6+gIR3W9s9N3SgOCKpbl
      pyZfflZCQ/5c1o/th2HSLrTM4jGpWlsbRm8v+V/71beU5VbBigSYHb1I+/6H+fWffZrXT5xf
      6We3NLTODpJPviOcLldME2++ENrAimGQ+5mfDk0FNZUKr5ctr73DH+2DeQdj504/xNhwehMJ
      2n75l8LfG1u3Ebvn8IqzocbOHXiFIloq5ac3BAtzVoLe3U37Et9N7+psClOqiYTvhKeWT0HQ
      8u1NyWPm3r1+Ln3jevduOj/+MbS2NjIfeP8V4c5bESsviu/cxrmXv8H/+5mvsH/3jusp03WD
      oqpkP/ShRRMmk0EUCiumEiuqSuKhH1mxPL2jHSUeD51aa98+fwReko+ytLOryQS5n//oiuVZ
      +/ahtbX5y/zq9cVdIVZ6H0VpqsvYtYvMj//o4v3A3FspFGns2knuox9ZlM+yMPcsnrulqKov
      j66T+fEfu+k22GoFy+rysb7TzNYgG5w5W6uUgNZPA7yZ0eQEtrc3mTBXCy2X8ztX45jUHdtJ
      vfupVWc8V7tn7t8XOMqtrUVQLYv4ffc1XSuWtWKdqmli7rg9B7uVsCwBOrftoUPR2d7dRckW
      bOm4uUJXVwM/DLq2ZYzJR9+Ofe58y8eSam1tfhQkGBnVWIzMMx9oqSwAvauLjo//rr+Ypm77
      WanrcD4vj9tHWIEAumExP3qWT3zmW+xp14jtfZQPPtY8GyyFx9DgAF1bd6HaRc72jZDK5mmL
      S2pKiu72NP3nztG1ex8J4/qvBV4UdO2dxti5k67/8b9vuSpF18n+7Ic37FxfRVHC1GIUxd/4
      SW99ixnFMlFiGzsTe6tjRSPOc+rosRT5tjSV2pWrk+rVCpVygYojmBwdo3PbDnZs3cLsfIHR
      4SGkcDl/6gwl+8afZqKvkC9+ORRFuarsxJXKuBZQ4zGc0dFFQrRShmVteC7OrY7lv3Z1ju+f
      HOfJt9+DGUvzzjv2XvGTWDJNLogmtPf0MjoxwcCFEp25GAlDYWx4kLbenQB4nocQAncjTiW5
      Sggh8DzvhtS9kcj/q98LfZNW30VYFmoud8u3xUZieQLEsjx07wFeffU1RsYnma14PP5A8wno
      dq3C7Pw8ljqHZ7okkimUOT9TsKe7k5ePnePuXn+mVdM0VFVFX+fo2gpUVUXTtBtS94ZiA+TX
      enowf/3XUG/1tthALN8SnsOZ06eZmJ4jkW6jqz2z7M86e3cDKvn2Lubn5rj33sOoCDRd5/GH
      H8TQ1HXZrBE2Fv5OCisnq21GLE8A4bJl1108/tTTi8eEXgYzlqAztmhPtrd3NN2Px1u3VSNE
      uF5YngBmkjv33R7hstWyQSNEWGEi7BRfX7IO+OADj/LQPfuvm1AbilWyQSNEWHZo7Nl9Fz//
      kZ+hO58hZlkYxq3tNBlrnAiLsPmwcjr0mVcYmC7R1ZnnzMDaj52MEOFWwooE6NxxJ0ceuI/J
      wT529nas9LMIEW5prEiAuYlBKlqWD/3kM4xPTF1PmSJEuG5YYSZ4lv/62S8x6aR4c0uGJz7w
      oessVoQI1wfLa4B4nt/53Y9z57Y8hmGRTt66+SPScfDWmAsUYfNhxZ4xOXCK1K4j/PNnHuFr
      z710PWXaWFxFNmiEzYflCSA88jvvQZk6yd9+7Yf86Lsfvc5ibSz0aCIswgpY3gcoDvJXXz3N
      b3/0l66vNBEiXGesMMMlef373+YvCv6J2ocfepLHHrhz+Z9GiHALY3kCWFl++Vf+BY8/ePA6
      ixMhwvXFilsjPv7grbsOOEKEteK29w6F5yGU2/41I7SI279nSFBW2houwqbHbU8ARQGFiAAR
      lsdtT4AIEVZDywSoluZ58QfPU6h6zE0Oc/T1Nzh+5gIDF07w5pk+pJR896v/yHR19eM6I0S4
      kWh5pUs8lWP31i14UjI2Ps3he+/l1PFjeHoMYVdw6wU8xUIIiRACKSWed/Wnq68XUkqE8G5I
      3RFufmzIUi9VURAyODoK6MjEOHZygB07/RP9wt2Vb0BKQqPeG1F3hJsfLROgND/N8Pg0ehH2
      7tzG6eNvkm7rImEK2tryTBb6aMum0LXF4+6v1a5pq0F4AqmoN6TuCDc/WiZAKtfBkYcWV4rd
      d1/zxNkD997dulQbCSlWPiEjwqbHbW8XKIqy4t5GESLc9gSIEGE1RASIsKkRESDCpkZEgAib
      Grc9AWS0NWKEVXDbEwAhokXxEVbEbU8AhSgMGmFl3PYEiBBhNUQEiLCpEREgwqZGRIAImxq3
      PQGE8BCRExxhBdz2BFCkjNYCRFgRUc+IsKkRESDCpkZEgAibGhEBImxqbMiieCkFjuOgKBqa
      qiAVBU1VcV0XTdOi9bgRblpsiAaYGbzA8XOXmJie5dL547x+4jxSCr7193/HVOUG7wsUnRAT
      YRVsiAbwNBNDLlCu1jD0GKbjUluYJpHr9u97HkIIXNfdiOquCsL18KRE3oC6I9z82BAC5Lt6
      6dpq8Mbrr5PNJOhqS3L05BA7tvm7Rmiahqqq6Pr1P3FeVRV0XUe9AXVHuPmxIb2isjDH8Pg0
      7d3bSFkK6UyGhRrkcwlUQ9uIKiJEuCbYEAJk27eQbd/S9G/79+3aiKIjRLimiMKgETY1IgJE
      2NS47QkghURGB2REWAG3PQEQAkW7/V8zQmuIekaETY2IABE2NSICRNjUiAgQYVMjIkCETY3b
      ngCycXBZhAjL4LYngB8GjfKRIiyP254A0RRYhNVw2xMgQoTVEBEgwqZGRIAImxoRASJsatz2
      BJBEi+IjrIzbngB4XhQGjbAiNoQArl3h1IkTjE3NMzsxxOjkPCC5cPIEZSfajSHCzYsNWRN8
      8dx5du6/m3OnjpNNx5gvF+lpT9B34RKZXftJGq1V4y0swHq3M4lmgiOsgg0hgOtJLENDVRVA
      IWWqDA8O0L51J+DvC+S6LtVqFUVR8DwvfFbTNIQQYcqCoiioqopwHCp/+2nEzOy6ZDPvvpty
      uQyAqqprrn/pbxrbqwshmmVc8lwrv7lV6tc0DSnldalf1/Vw/6jr0RaK3IBkmfGB88xUJfW6
      Qy6p0dHRwYtHz3Joax5j2x66khaFQoFsNrveqiJE2FBsCAGQkmq1imHFUBCoqubvC6oqoGqo
      ihIRIMJNiY3ZLk1RiCcSwYWvWgzD2JCiI0S4lrj9w6ARIqyCiAARNjUiAkTY1IgIEGFTI3SC
      S6VSU7x1o1GpVFp6Tkq5ISfMbFQ5N4scG1HO7SZLK2WEBEilUuuqfC1oJQzqeR7aOnN5lk7y
      rKcMIcSGyLIRnW6j2uV2kqUVOW76UyM24pDrjRr5I1mWx80iSyty3PQEuBnMFrh55GjgZpLn
      ZpGlFTluiBM81neOyUIVpOTEsdexXbHib51amRMnz7L0F1JKxgYvMDa9gPBszpw8wflLg6xr
      SrteZGy23PRP/f2XAPCcGieOn+JyD2lqdICh8RmQHudPn+T0+UvrkwHJUN95Tp44Qam2chKg
      lIK+s28yX22WqFSY4dzFfkAyMnCR48dPYXsrt+1q8OolTp3vA2BsbGwVkSUzEyMMjIw3P2/X
      OHHyFJ6Awsw4x48fZ6bQmh8I4DkVJqfnV5VjYrifkcnm3LG56XFOnjzJyMQMC3OTHH/zTeZK
      tfD+DSFAqVJnbGQIYRe4NDhGza5z9tRJTp69yFD/JeqepK+vDwnUHQ9Vek0dS0qPZMJibr7C
      zOB50tsOoNbmmK+sI3PUXmB8boHhoVGqM8OMFWyqVb+h6nUHVUqau5LAtEwWimUWxvvQ8jto
      U8qMzNdbl8GrMTpZ5s6DB0kYkpPHj3H81DkKU6O88eYJTpw+7/siTp2YobJQayaAh45bL4NT
      YaokuHNPJ2fODbUkirArTIyPMVeuMz4xwdTYIMePH2d4fIq+vgG86hxD4wVAosfSVIrNHa9m
      2+iqwJPQPzzBoUN303/hTKstg+fUmJ4pMNR3nmNvHKPqVnnlxVd54/Vj1AUgPYxEmlJxrum5
      eDLLwTsPMDY8yMX+Ee4+dBcDF86F929MGFTRMRWPS/1j7N69FeE6uEIyNTpGJhtncGiYcsVB
      AVLpDNpltp2q6mQySQBy3duZ6jvNzFyBut06AXw/WVJaKOPWF6jUFztXIpXG0C93rlSy2QwA
      yY5eFsYuMTU3T6W6jmNhtTj7dndx7OgrDA0OMD5XYWZogOlyja279qIrLp4AzYyTTlhXPJ7N
      Zn0zQI8TV2pcHJ7ArlVbFmfrzt2MDvQDMDFd5PDhw8xOjlEuFRkYGiefT4Gy2A5LkUxlMIJt
      6TvbUpw6fZZKbf1H5tq2g1ebZ2J+gVRmC9vyOoUqoOpk08krtsFRpM1rr73BvjsOoigqqqKh
      LBlOb9g8QE9XlqHpCjENqsVZqp6KrqokcluYvHCC7l27AZibnmB0bJShkXGGBgcQUiLcOpcu
      DTA2MkjNU0glE+jxDO2ZKzvFWlCcneL4uUF6OnOUitNcGhhp0jjFuWlGx0YZGBxhcnSYiu2B
      cOnr62dsZJiFmkcqlcRWEuzsWkc0zbOZnlsgGTdx1TjZVJzeXbuJa4LBvj7KNRdVBbtaon9w
      hKHBAQoz40zO+6bF+MgAo6OjTMwUSadSuDWb7bt3tCyOohrkEwqzJYeYLjl79iyalWJ7Z4r+
      6RoJQ0MKwWDfBUZHR5krlhgYHA7bdGR0lMGhUeKJFKYGXT1bW5KjND/D2XOXyOazzMzOYxg6
      SEBZtPuFazPQ18fIyAjFYpHBwCR747XXSOVyVMolEqbC6dOnMFNti++4Idmga8DSbFAhBIqi
      BP8FRVFxHMfPDXdtjp8+z/33HkZRFFzXwfP8309Pz9DT0wMIbNsBQDcMPNdB040rNMVa4Xn+
      yGroGp7rIgFN10FKPx/ddXE9DxSFmelpenp6UIC67Y9oum4gPBdF09HXdRiHxHVchATD0PE8
      //8LE8M4sTxb8mk0VUUKDztYaTc/M0O+uwdDVXBsGyElquaPclIq6Ibe0uZgUsrwjHHPE2ia
      gmO7GKaf5OgJgR6sE3BsGwlIt0KxbtCVT+G5Dq4nQFEwdA3H9TANoyVHVXgerhAYhoHnOKAo
      qJoGMjj7R1EBiR18D7taxNXTtKViuI6DJwSKqmHoKo7jYiyR44YQYDU49SqO1EjEzOsg1a0B
      z3VA1VomeISVcdOFQQ0rTpRI3QxNj1rkWiEaUiJsakQEiHBTQAjP97OuM246EyjCrY9PffLf
      M1kS3PvIUzz58D1rcsI/9Yl/T+ddT/D2vUn+5K/+jo72Tj7yC79AeyqI7Ambr/zTd/ngB96z
      obJGBIiw4agoKX7nv/0FPvGXn+Bgb5zPf+krpHr2k6xP8r6f+FG+8e2j/MxPPMWn/+ovGZws
      8s53v4fnXjnBTx54FKe6wD2Pf5DHt7v807Mv0aOM8+Lr53jP0+/hS1/6PFo8xeTZHzI8W+M3
      fufjdCTX14UjEyjCNYEfdtQozBc4eO8DFGcmuf+unXz6v3yO/fe/DVErUbY6+W9++ae4OLbA
      2x95hGfe9VD4vGXFkJ6Nq8Q5vL+bitbOw29/gvce2c1YReWBgzuZmC2tW86IABE2HHp9jn/3
      f/47tt75NlS3wpvHjmMmkuy75yGGJ2a5Z1ceNZah26jwH/7myzz8Iw/QAWDoTAAAAFBJREFU
      3t7uP2sleO3Zf+Cvvvgs73vyEUaHLjEwPk8ymSCnLPCNowPsyZucG5oiaa3fgLnp5gEi3L74
      4bP/wCQ9fPDJt91oUUJEBIiwqfH/AyvJgWEK/0fuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='data1_daily_q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data1_weekly_q1' width='192'>
      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
      f7j7NfZxiSMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='data1_weekly_q2' width='192'>
      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
      AClr/w/gd5/dGu3IKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='data1_weekly_q3' width='192'>
      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
      Qrd7/k9lAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='data1_weekly_q4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAGBklEQVR4nO3dW24byQGF4VOXvlCWMpi37H8Z2UOQFQR5CzxOMsnYtER21yUP3aQsTDwJ
      nJE09vk/gDDZpOgGjF9VLJKu0HvvAkxlSXr37p1aa699LsCLy5LUWtPxeFRK6bXPB3hR+XIl
      paR5nl/zXIAXF1/7BIDXRACwRgCwRgCwdn0RHGNkFQh2rgG01lRrfc1zAV4cUyBYy//9IV/m
      x7/+qD/94Y9KOWmYBg3ToDwOSkNSHgcNY1YesvKUNUyj0pCUclQestKQ99tJecyKkU7xPELv
      vb99+1YPDw+/6hthtVa9/9t71bVoXYrKUlSWVWUpqmvVel5V16qyrirnorJWlbWolaqyVrXS
      VNZVtTS1UhXzFkQIUkxJMUWlFBVSVBqShnHYgho/vWzBDVNWylnDPFyDjCkqxLDfv/0s/Dzb
      v3pKSd///vtf7flabWqtqZWm3ppa69dj5RpYeRLVuhStH1d9/Od+X6kqS9F6Lmq1qreuWpvK
      uaiuReNh1HQza7oZdbg76HB30Lz/ebibNcyjUk6KOTIqfSO+ml97MUXFFKXheZ6/t67lvGi5
      X3S+P+t0POn04UE//fAv/fDntzodT1rul2uEIegax3w7X2OZbyfNtwfNd7NSflxVCyE8z4nj
      //JsU6BvXatti+T4oNOH03798XI+ntRq26daUeM8aL47aHqzBXK4mzW9mTTeTBoPo4Z5m5bh
      ZX01I8BvTUxRN9/d6Oa7m88+pl+maXWbpp2OD1scH896//f3Ov/lpPW0anlYVM5FCtoWCKa8
      TcduZ823k8Y38/Y6Zdpf2wxJYR8RL5cQA6PMFyCAZxRiUIppe6E9Dzr87vCLj6+lqi7bgsBy
      v+h8POl8f9bHfxy1nha10q6LB71ucfXe1PfIQojKU1bKaV9tS4r7SlqeBuUhbfdfVuD2USdP
      2/2XiEKQFIJFVATwG5L2la5R+sWR5XNaqaql7SHV7fZ6WXUrqvsCwOnDaVssWLZjdV9AUO9S
      l1rriiFcvySVxz2affRJ07ZU/enxNGWlHKU9mJiitLcTU1TYb4RPjoe4RSZJIcRPru+P0/ba
      6TmnhgTwDYl5+40/fOFKwc++Hdu3Y61cYtmDWsq+crbdfvhpUV2L2tok9W2l7vIctV2ft7Wm
      yx2tPn4Dsbeu3prCfg699stfr74/rndJrSukLaVWu2KO159/vN4ULh/paW0b0WJQ77qObGlI
      Gg6jhsNIAHj0s+lOkILCPk16puW3L9TbY6xPwu2fO76317dA1/uz1oeFAPB1ukyXJF2nV/+z
      SRrfTJL4LBDMEQCsEQCsEQCsEQCsEQCsXQP41t/yBv6T6/sAIQQ+4w47T74Uz3+QCzf8yoc1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1NsqG
      NTbKhjWmQLBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALD2ZJ9gNsuGG0YAWLuOAL139d5f81yAF8cIAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGtslA1rbJQNa0yBYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI2NsmGNEQDW2Cgb1hgBYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI2NsmGN
      jbJhjSkQrBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArD3ZKDtGeoCX/OkN9gmGGzbKhjXmPLBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALDGRtmwxkbZsMYUCNYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANb+DckWK+6klk7BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='data1_weekly_q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q1_a' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='data2_q1_b' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q1_c' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q2_aug' width='192'>
      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
      g+JGNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='data2_q2_july' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAY00lEQVR4nO3daWwjeXrf8W9V8Sjeh0hd1NG6r5bUx5ye3RlfgA0ncYAEgTcXgjgLbF7F
      ATbYZOEEGSAvNm82CLBAEAeIg+RNkM0ihg3D4wS2seud8UzPTE+rqfu+b4rUQfEuVl6oWzM9
      I86MWiKb3Xw+b7ooUfw/bNVPdT31p2KapokQNUp91gUI8SxZnnUBQpSbUchjKhqKaZA3TCwq
      FFGxWS0SAPH8Sx3t8Pv/5ffZTcHf+tY/4HZf2xPfP9xZ4dgS4t0//B+0jP4Six++w61f+Tu8
      NNQgARDPP6evkX/0W7/BO3NFhtu8/Nff+0/sZ218s8vLvZUYozcaUQIRfv7RJL/obeD+9ApD
      bxYAQwIgXiynhzH8jR3szM1hFt38jd/6xxTnf8qBP8Ibr7/Ot/7ut1DNIq/f6gWOJQDixWBx
      +GgOF7HYdXbWFqmrbyTYGMHvspEL1FN0OWhtO9s1irS0PP4plEqfBn08nKIolRxWiAtV/DSo
      aZrIpQdRLS6/C2QWWVmcxeJtpNFnZ35xmUJRo6+7henZJTz+EM1BnbnlDfyhJhwU8Dc1sLGy
      Rnt7G8ViEdM0KRaLZXg7QlzO5XeBigYnxwn2jrLciDSgqCrTY/fJqjYGhkdYnIhiKCZDN0eZ
      HI/isdpAV3H4mmiq856v+Koq1+DEs3f5tVDV0G02ADQNxh/cJ9jag01VsKkKCgoGCpqqoCgK
      RiHL9l4ch65fd+1CXNmltwBGPsvczCT7x1m6I3Us7CSpD7hpDvuYW91Bd7hoCegs78RxuHy4
      FYPwjVZmp2YZvjl0vv8vWwBRDSp+Fkh2gUQ1kbVQ1LRnfiEsl8sRjUbLOobb7aa/v7+sY4jn
      0zMPQCwW49/++/+Iz19XtjG8Do3//KP/ULbXF8+vZx4AAJvNjr2MZ4k0TS68iYvJMYCoaRIA
      UdMkAKKmSQBETbt8AEyT7fUlduPHYJqsLsySSGYwC1mmJsbZ2ImRzySZnBhnJ3ZEYj9GwTTZ
      2tySLlBRdS5/FqhYwGZ3kDg5IeyxY7dbSaayHKyu0to7xPLUBIf7Jj2DI0xPjOOz2UnlTiio
      XhRFkRCIqnL5AGhWvG4Xh+kTVKsdj1MnbkDaAJdVw6IopE2waSqqopDPpVlZjvHKy2et0J9v
      hzYM47rf0xeYmBQKhbKPI54/lw6Akc8yvzDPTiJN0OdidXGZE9NBf2uIj8ceYtGstAV1HjyM
      YrU6sKlFXhscYGpikju3hs97gB7/q2na9b6jCygoWCxVcclDVJlLrxWa1c7gyF0GHz0OvPLG
      +ffCzZ9ORxFuefLn7t4eAZBdIFFV5CyQqGkSAFHTJACipkkARE2TAIiaJgEQNU0CIGqaBEDU
      NAmAqGlPFQCzWMR41MtTyOcpGGf9PflcDuNRr08ul6X4qOfH5KznR64Ci2pz+QYZI8/M1DiK
      u4GOkI2Hc1uYRoHu1jpWD9IU8wUiATuxdJFCwcRvUajvbGVudpVbwwNleAtCPL2n6gbt7upm
      bf+E2FaMzsFB0mtTjK8f89bLI8xEo2wep7k7Msp4NEo+Z/DBvQd88403zrtApRtUVIsrtUi6
      PHYSx6dksyaNbo3DdI6cWcRtUUnlChSLJla7g6HeOlY2duhpbzrf55JuUFENnqodeml1jUy+
      SENPH8rmKq5QMy0NAebn52ls6SDktTG/OEdrRzcWI4s7GIDtHZBjAFFlnqodum/g5vljd3fv
      +XJv/+D5cv/A42UXAI1NTYC0Q4vqIqdBRU2TAIiaJgEQNU0CIGqaBEDUNAmAqGkSAFHTJACi
      pkkARE27UoOMkU0xPb+IzemjqyXE5MwC3kA9TUGd2aU1guEIOnl8DfVsr23Q2tZ6XXULcS2u
      tAXYWF2hpasfM3lAdHqe7sFhTuK7zC6uMDA0zMHuBieJQ7bWltCcPhRFua66hbgWV9oCRNrb
      mZmf5Sh+iOKpw64paChkAMujT4rP59LsJFLcut0uk+OKqnOlACgoaKqKJ9xMd5OPT8YeYrc7
      uBHQGXsYxe7woCsGrwwNMTM5w+jITZkcV1SVK60Vmt3JwOCnHaAvBxvPl4NNbU8899boMCDd
      oKK6yFkgUdMkAKKmSQBETZMAiJomARA1TQIgatqFAchkMqyvr1e6FiEq7sIAHB4e8u6777K5
      uVnpeoSoqJK7QLlcjnfeeYf79+9Xsh4hKurCK8F+v58333wT0zS/tFfHLBqsLC+h6V5am+pY
      XFjAF44QdNtYXFoi3NyOpZDD6fcRj8UIhUJleyNCPI0LA6DrOs3NTaiaFauldK/O8c4yRWc9
      6e1F5o73qWvtYWN+igObSqRrgIXpKfy6jiuf5CitEVYUaYUQVaVkL1BiZ5W/eO8TrHadkTuv
      0NsR4fPNzLrHz+7kHApg04r0uu3sqxpJw8Sj29BUlXwuzcPpPd76xjelG1RUnS9thstlMxQV
      jfmP/4yd4zd5a7Tjie+fHB7jDQbIH8Wo87kZn10gbyo0e3VmFpYoqlasFhu/8GoP0fFJ7o4O
      STeoqCoXrhW5bAZsbv7ab/5N7FYLuq6jqF9cUUOtHbhSpyjtbdhtVkKpU6x2JxZNwXd6iu50
      QdFAtVgYHeor+5sR4rIuDMD26jwPphbP99fvvvHLtNX7LnimgsPpPn/kdH267HI/WlbPhrBa
      rYC0Q4vqcuFp0PbeYe4OdZFMJlmen+Ukk690XUJURMnrAP5wM6+88gr9bUH2jzKVrEmIiil5
      ZJjPZTg8PKSh7zVu9jdVsiYhKubCACT31/jff/AOAKepDM0dPTT5HRUtTIhKuDAA7nAb3/nO
      dwBYuP/nLG4e0ORvqWhhQlTCV7ZDd93+JfxqshK1CFFxXxkARVU5PZUAiBfT17oh5vFVWyFe
      NCXPAh3tLPPj//PH1DW3M/zqW5WsSYiKKRmA+Yn7RDq7mZubJ9R9h56mL14JTp8kWNnYYX11
      jTu3b7K8FcNisdEa1FmLnWC1OfGqJvWdrczNLDFyc6Csb0aIyyoZgKHXfoX1P/kTmlq6uNvT
      cOFzHJ4AvV12cobK9u4Bd26NMhuNsnqQ487oKOPRKFnT4KOPPuHu3VfPu0ClG1RUi9K7QPEY
      VqeP9cn7TK2/xMvdF4dgdWmR9s4+9pdnyBgmBiY2BfJFE9M0sdoc3Ah4iMUPaW+qO/856QYV
      1aDkWlE0CmSzWWy6jlks3cBm9wTxOW34+nqZmB7HF26mKaAzMzlOuLkNvZjHWx9mc20N0wyW
      5U0I8bRKBqCuoYXhmyqMjBBpLb3iRiKRR6+kMzw8cv71zy4DtLe3A9INKqpLyQBE3/u/PIxZ
      6Wr04q1rwqXbKlmXEBVR8gS/z+9nb2uD7e1t0jk5gBQvppJbgI7h17i7m8QbbsHjlkY48WIq
      uQV48PN3wOZkZmacsYWdStYkRMWUDMDArVdZX5wlcWJwp6ex1NOEeK6V3AWKx+M4Aw3cGRrF
      o1srWZMQFVNyC9B8o4+hrgjv/OS/83Bpt5I1CVExJbcA+9vrHOU0/uk//1f4fZ5K1iRExZTc
      AqQS20Q/fp+f/OTHfDC7XcmahKiYkgFQVZWiWWRheYOAp9RpUJP1lQXml9cwjRwzU5Ns7cUp
      ZE+ZmppgL37MYeyAgmmyvb0jV4FF1bl4ZrhUgvfGFvHXt9DcVMBju7hh7XBrhbX9E+rr6pif
      m6Glc5Dl6QkO9qCnb5iZyQncFo2N2B719c3AWSvEZ4PwuCu0nMwKjSOePxduARLrMyjhfg7X
      p2nqe5nmOvdFTyOfzRC50Y0td8DucRGbTUNVVQxTwWZReXwjmZHLgCpnkkT1uXAL4ApGMD9+
      F39TJ5tzY2w01dPe4P/C80JtXWxPTGMqVu4ORpiIRnF5/LQHdKLj43h8YZwUaGtrYXF2jrCv
      D0VRUBTlC5PklpNSoXHE86fktCj/8O//vfPH41NTcEEAFM3GyOjo+eM7twLny7eCT94/MNDf
      D0g3qKguX+vPYiqVKncdQjwTX+s2qRf9bqqJiQl+8MMfYbGU7zilt7ON3/3+98r2+uLpXLhm
      L0x8zPsPps8fv/Grf71iBT0LmUwG06Kj2vWyjZHK5Mr22uLpXRiASEcfv1bfdv7Y65crweLF
      dGEADnY3mZhbOX88/NIvEAl5K1WTEBVz4UFwpKOX11+5jVpIMzM7TyZf/qlLhHgWLgxAfDXK
      997+IY2NIdRQJ11NgYueJsRz78IABNtH+MG//h22tvYo7C8yv3FQ6bqEqIgLjwEURSVYH+HX
      f/Nv82umyf2xMWipu+ipQjzXvnp6dEUpPX2hmSf6yQNmF1Yw8hnGx6Osbu6RSx0zPh5lay9B
      fHePgmmyvr4hV4FF1flaV4I9notPgxZOYsSzCg0N9SzNztI5MMxxbJvZhSX6hobZ317jKB5n
      e2MJbC4U5fOfNS/Es1XyEu/m7H1+/Ef/D3ewidu/+BsXPkdzN/DqqI/56XHSioNOTUFDIQ1Y
      1bOmt3wuzdraAXfutlMsFqtyctyK1GDKBL3VqGQADuN7BMINLK1tcqfEnkv69JDltR2yRSt9
      HSE+GXuI1WrnRlDnwcMoNrsLu1LklaFBpiemuT168wtdoNUwOW5FalBkgt5qVHpirMGXyTu3
      GB0x6CkxN6jTE2Ro6NPvvRxqPl+ua37yuXduDQPSDSqqS8ljgOj7f07KFkY9XubDma1K1iRE
      xZQMwO1v/CpLH/4p0W2T1wYilaxJiIq5cBdoevw+eQNM1QKFFDsHx3TK1WDxArowAAPDdyka
      OY4O9jEc4QtvhxTiRVByF2jsZ3/MiaMVc3ec9+UYQLygLgyAaZq0dvUx+/FPia4e0iG7P+IF
      deEuUDK2zh/+2Qf09A3w+muvEvTK5wOIF9OFWwBPuI1/8tu/zUCLlx/8m+9yT6ZGFC+okluA
      //kHf4o/1Mg/+/6/o6UhVOm6hKiIiyfGqovw7W9/+2s1r5lmkWw2j91uI506xWp3YtEUUqen
      6E4XFA1Ui4VCPi+tAKLqlLwf4Ova3VhmYnmfO131bCSL5FIpmnx2TopW0qkMfqtKfUeE+flN
      Rm/2XVvhQlyHK/1JNnIpYkmTkM/B+kGSkZERZh5G2U5meGmkj+jDKPmcwfv3xnjrm9847wKV
      blBRLa4UgPjeLoVClo31TbramjlIZsmaRTxWlZNMDsM0sdodjAyEWVzZpK+z5fyoW7pBn5RM
      JtneLu/JBr/fTzgcLusYz5srBSDc0kG4BVqbGwkGfCwuLBBp7yLotrG4tEhHVy9aIYsz4AP2
      QTpBS/rZz/6S//a//qisY9y92cP3v/fdso7xvLmWo9K6urP7hbt7+8+/1ts38Gjp7BpCfX09
      IO3QJSng8frKOkQ5p358Xsmc4aKmSQBETZMAiJomARA1TQIgapoEQNQ0CYCoaRIAUdMkAKKm
      XelKcD59wvzyOoap0d8VYWp2CY8/RHNQZ255A3+oCQcF/E0NbKysceNG+3XVLcS1uFIALLqb
      3p5uxsceMj2XoffmCIsTUWaPTIZujjI5HqVgtXGSOcbha3riZx+3RFSqNaIaWjCkhupzpQAo
      isLu1gaKxUK2ADZVQUHBALRHk+MahSx7e2mGGjqeaId+fLPN47bocjIxv7TluVLt0F82TkX+
      H8xiRd7r8+RKATg9inOYzGCa0N3eyIOxh+gOF50BnbGHURwuHw7F4KWhIWanZhm+OSST45bw
      +P+jvDWoclfe51zpf8PlCzLk+3Ry3JfqGs6Xbze0PPHckeGbgGyCRXWRs0CipkkARE2TAIia
      JgEQNU0CIGqaBEDUNAmAqGkSAFHTJACipl35uvhR4gBTs+PzuEgc7OP0BrFbVQ729/EGw2Dk
      sdjtZNNpdF2/jppFmfyLf/m7TC+slO31C/kcP3j7+9y5c6dsY1zWlQKQSx1znM6T2FrAGwiS
      t7pZWpsg7LGBO8jaxCQBu5W61gZW1g8Y7u+6rrpFGdh1B/VNLV/9xKeUzWQq0vR3GVcKgM3p
      xZU8Yc/iJnGa4tZIDzOJffbTeV7qaeRob498Ls0H9yf4ZZkc90trKBqV6Qb9shoq0adlGEZV
      TRJ8pQBkjvdY2c9w59YQW4tT7Byekika+HULidM0haKJVXfw0nATMwurDPXekMlxS1C1Z98N
      +nU+D+KqNE2rqo7Uq90PoNnRlRizs3N0dvWzvbZIR08/XoeVleUlegcGUfIZdI8bRUnI5Lii
      6lwpAHaXj8HBTyd0be/sOV/u7O49W9DPJmQNBM7apqUdWlQTOQ0qapoEQNQ0CYCoaRIAUdMk
      AKKmSQBETZMAiJomARA1TQIgatqVrgQX8xkefnKfYMdNAhwzsxlHUy20BnU24qdoFh2fZlLf
      1cbs9DK3hge++kWFqKArBUC16vR2dxA3YGUnwUu3RpmJRllPJLkzOsp4NEquYPDhvU949dXX
      pBtUukG/shv0d777Pfbjx2UbP3Wa5Pd+9EMaGs5mMby2tjyXBU7zBgYmugI542xFt9ocdN/w
      sb0XpyMSlm7QEqQb9HERFly+urKNnzPMJ34XV/t8gMwpK5v75JUEfT09LM9NEWxoocFvZ3Z6
      ksaWG9iKeTzhOnbWN6QbVFSdKwXAqrsYGhk9fzx4c/h8eegzywAtra2AdIOK6iJngURNkwCI
      miYBEDVNAiBqmgRA1DQJgKhpZZmfYndtgc1EClWz49NMGh63QowMlmM4IZ5aWbYAu4en3B4d
      QS1myefS3PvwAf2DAxW50ijEZZQlADYVsoVPWyF6O5rZ2okhl8BEtSnLLlB3Tzdzs1M0tXZg
      K+Zwh+rY3dySVghRdcoSAIvdxeDQzSe+FolEAGmFENVFMSu4RhaLxfM26MfHA4ZhcJJMoijl
      OyGlKOD1eJ6o47OfzJ7P50mlM2UbH0BTFdxud8kastksmWyurDVYNA2Xy1myhmQyiVEs7+rg
      dOhYrWezBZqmiWmaT9RwfHJS1h0F0yzicbvPO4ArGoCzAs6Ge5YHxJ//xUsNz0Y1rAsVf/eK
      olzLG85nUmzvxsicHrMbS1zqZ6/rl56I7XKSyrK/s8lp9nJTfl9XDfs7W6SyeXY218gWLve3
      7DpqME2Tnc11cgWDrY118pe4r+e61oVCLsPm9h65dJLtvdilflZ7++23375yBdeoaBRYmJvm
      3sef4PHVUciekjNAU0yyuQy5XJZkMs342AM8gSDjYw+pb4rg0m1MRsc4SBziDYSxXOF3mzw6
      4KN777F5kCIY8JGIH2DTHRTyeVKpFKcnxxhGjgfRWYIejejUGm1tLZi5JH/13j0CTRHsVykA
      OIzt8pfvvstp1sDrdhGPJ9CdTvK5HKlUiuPjY8gfMza1gcuaYW4tTmtLM4mtBcbntyii4PO4
      rlRDbGeDn/78XQqmhs9l5yB+hMPpIJfLkUqlOT4+Jn+6x9RSHNL77JwWaa4PoSom4/d+Rqyg
      U+93f/VAJZhmkaX5GT748COc3gAUMqRzBlZNIZfNkivkOEycMDMRRfcHmHw4RrixGbduZX52
      hq31ZTKqB7/bXnKMqrsSrGoWunv7iUQiNIa8JE9TRMfHSWyucn9iDqOQI3GUxK47cbudWO06
      Tt2GkU6wnUiTz+XIX/EDGNy+OjrbW+ns7kEr5kinT5mcnmfiwUdsxw45OohhKioutwfdpqK7
      fFg0FZvTS2dbM1zDCV9/qIHWlgh9Pd0U8xnSp8dMzy3x4N5fETs65SAWw6KpuDw+bJqKy+NH
      VcEoKuh2FcMwrlxFqLGF5uYIA72dpNMpTuI7zK9tc+/dn3OcynIQi6GpCh5fAA0Vr8+HqsDh
      7gZ6oBHtihUoikpX7wDNzREi9UGSyVOmpyaJ723xwf0JihSJxw+x2hz4PC6sNh2nww6qha6e
      XjRFxemwfukYVReAz8omD4kdnmIUi4BG/9AgDpsFFBWX243X48HlcuFyOlAtNkLhevq7Gllb
      37+2GrY2N0C1UCjkcHlD9HW2oShgtdtxe7x43C7cHi/WK/7F/zKbGxuoFiv5fBZ/qInO1iYA
      7LqO2+PF7XLi9viwqArBpnZGhgY5Oti99hqsNiuZbJb6pjZaGkMA6A4nbq8Xp9OBx+tFVUxW
      1rdIHcfZ3N65tvEL2dNHu7omxaJC78AALt0KKLhcLjweD06XC7fLCWaR8bFPaO6+Sdjr+NLX
      rZ6P6vgsRaE+XI/V4cGu7eDzBXD6/ChWDRU7AZ9C0WVFAeof3dys2Dw0eGPMr8bp6e+/cglu
      Xx2K3YJeV8fmXoK6uhCeR5914AuGsKgWQkEfaDr1obP92NRxgv3DYw7zK/T19FxpNwwgFAqj
      qQrBYID9wyShuhAOy9lYdaEQqHZCARWLblLnPzurkTw6YHsvTriples4tGxoqAcgGPBzlEwT
      qvNjM43zGlSrg6BXQyeA3X62Qt566VUKmSSJ9PWcX2loqEezOXDaNTSrD5fHi2m1ARrBOj8K
      Biqc3+huGnlMzcr2+jK0duB3l/5wxoqfBRKimlT1LpAQ5SYBEDXt/wPSEdJtILor0AAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='data2_q2_june' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAUo0lEQVR4nO3dWW+j2Z3f8e/zcHkokiK1kdopSrW0e3F1uXuSguEgDtpGcpEbTzIxjCCz
      AMG8itzlHeR+gCAzA2SSi2QyGGDipOHpxI1yubtaU10q7RIpUSIpkuK+81lOLqqn4I5VLjdL
      VJXq+X9uJfGcQ/FHnuc858+jKaUUQriU/qo7IMSrJAEQriYBEK4mARCuJgEQriYBEK420gA4
      jjPKh0cpNfI2LvKq2nwVK9Zv+vM70gCM+h+mlHLNi8JNY73KNr1X1tJr4pOf/y31Vu2lHsN2
      HDz61c4eHUehaRqadqXNvpKxXmWbrgvA/z3+mNAdz6vuhnhNyEWwcDUJgHC1l5oCmYM+6F4c
      y8Tj8+P1SJ7E9XJhAFq1MlsbjyCywLffeYuA9+tXXp1mAyMcYePxl9y6fYvN7UO+/f4dNMvk
      yc4B4YkZbqwsfuPOmKbJJ598QiwW4+7duyil+Pjjj9E0jffee4+NjQ3K5TL37t3j4OCASqXC
      j370IzweD5988gmWZXHv3j0ePnyIZVl8//vf59NPP8Xv9/O9730P7aqvIMVr78K37PDENIn5
      aVZuvo3Wb7K9vcXm7iHrD+/z6PEWxdM81WaFUqVOuXjGeb2J7Sgy6UOUx4dSwy1jPXjwgFAo
      xNLSEvA0EOl0mlu3bjE7O8sPf/hDfD4fq6urfPTRR/h8Przepxne3d1ldXUVr9dLq9VifHyc
      zz//nEgkguM4VCqVIZ8i8SZ74ZylWj7HRqPZbBAITXL3zjvoGoQiUyRWEiSXF1laThIJGmi6
      ztLKGoPKOb1v0AnTNPnZz35GNptlfn6en/70pziOg8/n48c//jEHBwccHx+TSqVYW1sD4Msv
      v+T9999/9hg/+clPqFQqPHr0iEajwcnJCY7jEAqFMAyDwWDwjZ8c8eZ7bgACoQkMDxgBAw2N
      aDRCNBpF0zSC4+N4gPHwOOg+JsaDACwn18gf7aOC4xjfoBM+n4+PPvqI7373u6yvr2MYBhsb
      GxSLRR48eEChUCAajbK5ucmdO3dQSnFycsLq6irpdJrj42MePHhAJpMhGo3iOA6O4zA/P8/6
      +jrpdJqZmZmXfKrEm0gbZUWYbdt4PMOtuafTaZLJ5G+ctzuOQyqV4saNG7/1/P7f//m/k/sA
      4pnX9kbY6urqb/17cnErhiXrlsLVJADC1V7bKdCofHv6Axrp+ks9huM46Fe8QUwphQZc9W64
      VzHWq2zztb0I/m38/R75UbZxEcuynt1/uCq2baNp2pW/GF/FWK+yTZkCCVeTAAhXkwAIV5MA
      CFeTAAhXkwAIV7swAN1WnaOjI46Ojuhbv75K2m23sZXiJH1ApdEivb9Lo9376mctTOvqv0lA
      iGFcGAB/IAjtAlo4DmabnZ1tKo021WqF46Mjup0uzXqFJ3uHNIonbB5mAY1Br8X25mMqbdl6
      LK6HC+82eLw+AoaBNhZEo4WmFNs7OxiqR/Kt92nmTom9/RbJZJLk8jw1M0AkZAAGK8vzWFc8
      CCG+qX6/j2VZL74GyKRSxJcS+L06oeg0MxNhkM2X4pqr1Wrk8/nnb4Xodxrgj+BxuhyfFojF
      ZtB1jXAoRLfVxh8K0u10CI8ZNDoDIuEgvVadVCaLpnu5efs2upKtEJdFtkJcPqWU7AUahgTg
      zWlTlkGFq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtdGIBWrczm
      kw02t7bpmr9e3NJu1LEcxeHuFpV6k93NJzTaPRzb4jh1QK5YHnnHhbgMzz0gYzpgM7PyNtqg
      ydbmJvlSlWLxjJ3tHXrdAc1Ghf3jUxrFU/ZPS4BGv9tmam6ZfCaN1ISJ6+C3mgLpus7RUZrM
      UYrE2k1alTJGdIqVlRWSiUWWEkkiIYOxUITiyT7hqVmZW4lr4YWv0/zJKaHoBLquEYpMETSe
      v021mNmnYQeITY5z9WeaC/HNPbcewBr0wWugOybVRotQKIiuafj9fszBAI/Ph2Wa+H1e+qaN
      4fcx6HWo1ptoupdYbBpH6gEujdQDjIYUxAxBAvDmtClTdeFqEgDhahIA4WoSAOFqEgDhahIA
      4WoSAOFqEgDhahIA4WoSAOFqEgDhas8tiHl4///w8MvfXBDz8LP7VKoV7t//xbMTYmqlLF88
      3hltr4W4JBfuOApPTLMUj6LNv43Wr7O1d4rmD2K2Sth6iKmAn9CsRbnWYub8jEqzB2gox+S0
      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
      s/drAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='data2_q2_sep' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q3_aug' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q3_july' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q3_june' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='data2_q3_sep' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data2_q4' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='weekly_KPI_performance_analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXAk2XnY+cvMOrLuAlCF+wYafQ/6nJ6ekzPDOSiSQ9Ery2SsDtO78tpe
      h0Ihr83dDa1Da3nlWB+KjY3dkCWZotfmkCIpkqJmyDl6evpAn+gG0LjvG4WzCnWi7szcP6q7
      pjHdPYPuruoL+YtARCEz38svX+b33vve9973hPX1dQ0dnW2K+LAF0NF5mBhu/NA0vSHQ2X4Y
      bv4nlUo9LDl0dB4KehdoW6Mx71tlNZwAIL6xwfDcGhqgaSrjM0tspJUt5zYzv0xwI73p2Pzi
      J/nfCVXJMjS5RDKrAhAORRiaWUXRNOZ8K/RP+Oif8DG7Eka93lO5We77QVeAbY3Ala5+ftQx
      CsCVq/386+98SDitko7H+JPvfUxK3XpuP/z5x1ybC2069vP3z9ExtPSZ6ZRknH//3Q9YTWSI
      x6L88V+8w/jaBqIg8ON3zvAff3qeH314lX/z5z/jj79/nqyq8bNfnuX86PJdP/Gn0RVgm7Ov
      tYaR6SVUTWN0bg2XDFPLUZYWV7BXVFIiS2iahm9pjdG5NRQ1VwNrmsbySoDhmVUyymb7UVWy
      DE/6iCaz+WOzC8usRZIAJBMJhmfXUD9ldqqZDH/69oe0HWjnq0eaEK4ff/PVZ/ijf/I1/q/f
      +xqTQ2MsRDO3eRKNsSkfwViCkalFVsLxvF2bSiYZnPDhjyTRNI1YNMbofIBoNLbZBtDZfjQ0
      VJNZ72QlmmQ2kOLNI82MzK5SmlhmX2sNaCrf/8kJunwJSkwaoquc//mbz/LOL85wajRAhcNA
      wuDgf/v7LwOgofG3759jNGbm95uq8/cZHBhjICbzz3/tac5f7KEnZGR3g/cmSTR+9Len6V/J
      8P/8/d2Iwk1nVI2sorDiD6NKRqzG29XbCn/+9vskLU4qXTJjcwH+xT/6Ol5hg3/1nz+msbac
      GZ+f/+E3fgUhMM9/+Pk1Su1mvQXY7pitdlo8Ml0DkwjOUo7uqGJkapHR2TX2t1SxEQzwwbVF
      vvbyQb76hQMsTk0xteTn3ctTfPkLB/nySweILfuY8scBuHipm7/pXuYf/erTGG/6ip89vJPx
      0SlCiRQdvbO8erTtU5JkWE8Z2Fkq8pOOUW4elPzeX3/Ab/zBX/Jvf9zJN3/1BbzWO9fbv/Hf
      fJE/+J2v8qUDVZy9NsPJC31U1dfz+jN7eH53JR9dnQDAYLHzr3/31/QWYNsjiOxvreSXZ/s5
      cuwgnkovkcXzBI0mvlXlRAmtoGoCc4urmER48ek9yKKGqmosLvsJGgWeObILp1kCYCWSod4B
      5wYX+fKhuvxt3B4ve70G3j3dS9jgZF+N81OCGPmdv/sStkSA//UvPubF9gZavTYAfvPX3+Sr
      h+u39DgGKSeH3WJmLauQzigkkwlGZpYQrQ4OVZaDGsZmsyIbRb0F0IH9O2pZXo+yp6kCo9lC
      jcuA01OO0yjgKCljX42N4EYGi1FiZiWMp6yUA81l+KNJrGYD04sh7LIRgK+9doz/7q1jvPtR
      J5HUTSNIgsgrT+/kndM9HD+8a1PrcP0CjEaRypoavnq4lu++c5nsp42ELfDuyU7eOdPDh92z
      HNhZyzPtLQSDUWSzmVgoTPpTn7z07W9/+w9v/KMoWx/y0nlysNqtOK0Wjuyux2QQKXFa2d1S
      S2WJDUGUOLqvmUwiQUoVee34XjwOC4f2NSFk0sQzGi8/s5cqtwVJEmmoKaeh2oPLpGG02Clz
      yNRWeSlzmLHLBk51z/Ctrz+H3STl7y8IYDSZ2NlQidkg0lJfQTIex+Mtw2ExUlddTpndvElm
      SRKprfLiccjXj6h8eLaXF54/hJpK8+KzBzm2oxxvuZe9tS5W1mPU1FXz/L46DJKEy2mnpboE
      4cZcIE3TdEeYTnHQVP7LT07SN+Onafdu/smXD/Dp+v/+yfI//dH/xzd+++9ypP7T3as7oyuA
      zgNAY2llnYQi0FhVgigU/vMHjdmFNcq8ZdjN0udffh1Bnw2qs53RjWCdbY2uADrbmqIoQHBt
      ie7ubvoGR8lPJdFUQqHIpusCi0ukASWToLenh/ml3EQsHZ0HRVEcYSXeKqanF9h1aCdrvhkW
      Vtapr63k5McXeeX1V/EvziLKLoyxKJbqKjKxEPaSWtbnxnE4ZCZHRqmubyCbVnDKGhnBxMz0
      NPXNO1ieHiMrmmhpqkMz2Iiur2IxwYzPz579+7GadN+eztbZ1AL09vWSiYfoGxrnnb9+mx/8
      6KdE4hH6+3Pu449OnsA3PcJaJLUpzWfhWwlwcF8bc0t+mlta8TgtZDMKU1MTN12lMtRzmfWs
      iYWhXpKIDAyNsrbqY3ZhhZnRAVRRZHCwH8FgodJtYHk1QCyRYXlpib7efoR0hKHJhcKVjM62
      YJMCDPZ28fYPf0Z9Qz1xzLz8VDXne/oZG58DYH19nXBghWhwhT/7sz/nYlcXf/297/HR+a5b
      Mpauu6SNgkr3tQHKvBWkYgGWlpdYjyQxGgwIYu72giCx9+DT2MUkssuDpGnsaG3F6zAS08zU
      VteABi2tLYiShChKmMxmpkYHCYQ3qK6uQpSdNNWUF7u8dJ4wNvUXBMmAGQ0VmBvr5/2NBF/6
      6qucWxnJX7MRDSF5jVhlM4m0wP6jR3j12UO3ZNx+OHds/8Gj+WON1RUA1NQ2br7YXUmzG5ob
      cx9wa/5EJTdmk1TeSFJVlT/b1LC1+SE6OndikwLUNjRzrH03l/sGeeal13nhuedQlQhVlR4A
      qqurcTtMSGTQALPJTFNlKScv9vDF2yiBjs6jju4I09nW6H4AnW2NrgA62xpdAXS2NXpgLJ1t
      jR4YS2dbo3eBdLY1mxRg0ecDTWNhfo6N0AofnzrNlZ5+sorC8tpq/ppMOr0ppks6szka2O2I
      BBY5dfo0Xb1D+dgy94KSzd5Xeh2dm9m0JvjD997DblSY9KcwR6cJOdqoN/m5Oh5hcXGCHU0t
      nDxxArvZiMHhZLDnKqpB5off/w6O0ho8JS7C/mV6+obxVlQyMdxLcEOhrMTJVP8FqNiLMzHL
      mB8SgTn80TRiJsHcog+TyUT/tR4MNjfBtSXGx0bJKgpjk7NUVpQzPtRHUjPSd+4X9PgSNHpt
      9PYNU1buYXF6Cn8sSalr60vhdHTgUy1AMrzKT989SUtzM6AxNtTH0HSA3TtqNyWaGx9hYXqA
      idUUqpKltrGF1oYaQCMQDELcx5nznXT2jCIK12trTWF4oJfJ5ThNVTbSqsSHH73PaNcFNgQ7
      iUgQi9XEhydOcvbsORpqK/nofDfixgKnz55iej3LpTOn8VbXsXNHK79895eUOA2c7rjIRx90
      UF2hzwPSuXs2KYDJXsY//d1/zIWTH6IhcODos7zxK1+hutR6S0Jn5U6O7a3lbMdFREFAEwTQ
      VIYGRymvqcGAzKsvHefcmbNkAESJI8ee40tf/jJCxMfahoqnzI3BaKepoYax4SFkRyl2WcJd
      Wo7b5aCmthabbCaRSBCNhKmorkYSBDQgnU4SiqaorfZS19iIxWwgmdSNeJ27Y1MXyGA0Ulrm
      pcxhQrR7KHGXYDfnBopMJjNupwuT2Ux5RSU2m8zk+CStu/fQWulhfi2Kt9RNOhllIyNRV1PJ
      yuI8lQ0t1FZ4kAwm7E43FpOE0WRmaWEBb0U19Q11OFwuzJLK8lqImro6qivLcbvdmM0ypSUl
      1LbsRYwHsJeU09xYx+zMHMePtONb9tPU0orTYcfltjE5OY/HU/qwylLnMUSPCqGzrdGHQXW2
      NboC6Gxr8p5gQRCQJGlTeERRFFHVre+QoKoqq6ur+dVgW+Fu7/Gg0mxnuQRBQBCER06um9NY
      LBbsdvt936OgK8jj8Tj/x+/8EV6Hp5DZ6ujcQt0zDXzrd//BfedT8BAKbqsLj64A2w5FVZhe
      m6HBU080GSMcD+O2usgoWUCj3Fme22km6GMjHcdj9xBJRpAEibrSWhZDS9jNNlxWF+F4GH/M
      j9fhJZ6OE0/FqXJXsRpdQ1UVGjwNmAymgsit2wA6BcNqspBVFFwWJ+VOL+FEBKfFQTKbG10U
      BIHa0loMooTb6sp/4KlsikgiTCKT20JpLeqn0dPIUniZcCKCxWQhmoxRW1JDRsmiqIWLYl7Q
      FkAQBKLCBoaM/y4SwV1Hw3oQaba7XHeLABEtiprVSCcyrCfWqS+rI6xFCWfDrGUsQG7e2IYQ
      Z10JEk6FiSgRJiNTWOwWQtkQUkbCaDdxbbWXTCaDJEokMylkycz88gJuh5uQGqbM4P0cgbYo
      9s1rgjOZzH0ZwYqisLy8fFdG8KcN70clTSHuYbPZcDgcn5nmUTWC4e7WiMRiMc6cOUNZWRmp
      VAqj0UhtbS2rq6v4fD5aW1sxmUyoqkpDQwPxeJyRkREEQeDYsWNEIhGi0SgTExPs3r2bsbEx
      du7cyczMDIlEgoaGBvr7+6mqquLgwYMYDFuruz/v2QuqALFYjB//8V/SVKmHKwGIeeGZ156n
      r6+PpqYmkskkKysr7N27F6/Xy+TkJPPz8xw+fJiZmRlisRg7d+6kq6uLgwcP4vF40DSNnp4e
      ysvL8fv9RCIRdu/ezfj4OKurq7z11luI4mf3ZB+EAnzePVKpFCaTKZ/37dLccMbKsny7LLZ0
      n7u9vuBGcEWJl/rymkJn+1gybfQzPz8PgNPppLq6mlQqxerqKl6vl+npaV599VU+/vhjlpaW
      2LNnD/39/Tz33HN0dHTwxhtvEI1GWV5exmAwsLy8TGVlJbFYjGeeeYaPP/74cz/+RwWz2fy5
      1wiC8JkffzF4PErvMaa9vZ0vfOELXLlyBUVRkCQpP+Xkxni7pmmUlpZiNpupqqqir68vn/7k
      yZOoqsrs7CyQq9HS6TSDg4Ps2bPnoTzTk0TBjeDZ0CJpaet95yfZ1jTVu1hcXGRmZob6+npG
      R0fZ2NigurqaCxcuUF9fz6lTp3j66acZGxtjZWWFAwcOsLi4yNNPP82pU6f4+te/TjgcJhwO
      4/P5CIVC7N+/n/n5eaqrq+8kis4WKbgR7PP5tmygwJNhBBuNRrxe75bLK5PJIIoikiTdMY2m
      aaTT6Vu6Do+qEfy4es4L2gIkEgnOfucXNFc1FDLbR57Z+DLf/P2teyWNRuPnXiMIwpb6zTr3
      R8GN4HK3h1rv9mqaQ9d3Sdd5/NCNYJ1tTcGN4JnQIqltZgSHtI27lEbnUaGgRrCmaSiKcldG
      8ONqPD3JculG8D0Sj8f5qz/5LtWeyi2nEQS426iMDyLNjes1r5lf+bWvEggEiMfjeL1e5ubm
      aGtrA8Dv9zM+Ps7evXsJhUJEIhF27drFxYsX8Xg87N69m2QySW9vL16vF7vdzuTkJLt27SIe
      j+P3+3nqqac2eUh1HhwFVQBN02gqq2VPfVshs32oDKXm89MRDAYDRqORhYWFvAIA7N+/n0uX
      LgHgdrsZHh5GVVWampqAXC3U3t7ORx99xCuvvJK/XlEU2tramJqaoqWl5aE833ZHN4K3QFdX
      Fw6Hg2AwSEVFxSZ3vaqqnD17lmeeeQZZlnG73VgsFpqbm/noo4/QNA2TycTg4CCiKCKKIpcu
      XaK0tBSj0YjH4yEUCj3Ep9veFHwYdC3oZ8H62TMgHyeScpLDO3YQDAYJhUJMTk4yOTlJdXU1
      6+vrzM3N4fV6CYfDpFIpRkdHOXjwIFNTU9hsNnp7e6moqCCRSGAwGJiensZisaAoCqIocu7c
      OV588cWH/ZjblqJ4gu9mgtaj7gm22+243e5bzicSCbLZ7Kbpzrcrr7W1NTwezx37+LoR/AQZ
      wclkktM/eJ+a8qrPv/g6D2JIczm6xm/+3n9f0IKzWCxbysfrLczCDZ3iUHAjuLWikX3NuwqZ
      7X1zdbrv8y/S2ZboRrDOtqbgRvByYAWHxVbobO+LQDj4sEXQeUQpqAJYLBae/nsvP3Jrgr9g
      eHL8EjqFpaAKkMlkuPLRBUodt46a3AlBFNDucseXu01TtqMKj8fD3Nwc1dXVxONxMpkMHk8u
      ftH6+jrJZJKqqioWFxex2WyUlJQwNzdHRUUFZrM5F9PG56OyMufl9vl81NbWoigKiqJs2SjW
      ebQoqAJks1kqcLPP+2gZwf2B2fza3FOnTqFpGgaDgQMHDlBWVkYkEmFxcZGNjQ0MBgPd3d0c
      OHAATdM4ffo0b7zxBl1dXdhsNiYmJhBFkcbGRtLpND09PciyzKFDhx7yU+rcC9vGCK6pqWFk
      ZIQ9e/agqirpdJrV1dy+Z7IsMzU1RXl5ObFYjGQySU1NDZOTk/kpD9FolJ07d6IoCnNzc0xM
      TDA7O0t7e/tjszBd51a2zZs7ceIElZWVWCwW2traMJlMeDweFhYW8Pv9tLW1MT4+jiRJWK1W
      Tpw4gd1ux2azMTk5SUlJCT09PZjNZqqrqyktLSUejzMzM8PCwgKZTOZhP6LOPVDQLpDZbCZV
      I9Gvzm45zYPwBja2NVNSUkIsFsNsNlNeXk5lZSXhcBiXy4XL5SKbzeJyuQgGgzQ0NCBJEpFI
      BFmWCYVCtLe3EwwGcbvdaJpGOBzG7XYTCATy64F1Hj8KqgCKohBdDuMt3XpwXEFQEa+73K1V
      TtoPHfjcNPeqNFbr5r3ObLZbh2vLysry19+Y9OZ05nafLC39ZPulG791T+/jTcGN4CZ7De2N
      ++4p/bnVnkKKo6Pzuejtts62RlcAnW1NwY3ggDPOufVrW05zc3++rnV7xRPSefgU3AaILoW2
      bATL5XbaDx9gamqK+vp6jEYjiqIwMzNDXV0dPp+PVCpFTU0NqqoSjUapqckF3g0EAgiCgMPh
      YGpq6vq+wmaWl5epra3d0v5ROjoFHwVqdtbS3rJ/S9d3LHbR0dFBc3MzHR0dvPLKK1y4cIGm
      pibOnj3LkSNHGBwcRJIk5ufn88Fgk8kk3d3dqKpKbW0toihit9u5cuUK+/fvx2QqzPY5Ok8+
      D90GcDgc9PX15WvsG//bbDacTifxeBybzYbf7+fy5cskk0kikQhVVVVUVFRgMBjw+/1cvXo1
      H1l5amrqIT+VzuPCQ1eAcDhMTU0NkUiE8fFxQqEQNTU1xGIxpqamaGpqoqysDLvdjslkYmlp
      CVEUmZ2dxefzYTabcblc+eWcDodD3/FeZ8sUdE1wJpPh4rkLGAyfH/wVoK6xjvr6eoLBIDab
      jfn5eRobG4lGo9jtdlRVxWAwIAgCyWQSVVVZXl6mubmZZDK3oZrJZNp0fSKRwOFw3LIG91Fc
      e/uoyrWd1gQXVAESiQQf/fR9vKV39o6aPVYOHv1k5uTjWnBPslzbSQEKbgS3uOtp33FnI/js
      wpVC3lJH57546DaAjs7DRFcAnW1NwT3Ba9YYZ5av3vGauhZ9C1WdR4eCtgA5T3AQKabl/2ST
      mYOHD+IudXP46GHq6uqA3AqrWCxGIpFgenoaTdMIhULMzMzkja/V1VUWFhYACAaDqKpKKBRi
      dHT0rhfS6+jcjoIqgKIotJQ28OKuZ/J/qXiKWCxGeXk5Z86cAXIBZU+ePMno6ChnzpxhY2OD
      oaEhuru78w6xbDZLOBxmfHyc+fl5Tpw4QTqdJplMYrVauXJFN6Z17p8HYgO43W46Ozvzi0iG
      hobYtSu3cN5sNtPU1MTk5CQrKyucO3eOeDy+aZON2trafPhwq9XK5cuXqaioeBCi6zzhPBAF
      uLGnbSQSYXR0FKPRyOzsLNPT0yiKwuXLl9m3bx8OhwOTycTKygpLS0ucOXMGj8fD+vo6ExMT
      TE5OMj8/T1NTU35Bu47O/VB4T/D5Cxhu2ga0vr6OqupqkskkZrM5/wFrmoaqqkiSRCKRQJZl
      stksqqqytLREbW1tfkqDyWQilUohimJ+xqjZbL6rXVUeRYfToyqX7gi7R7LZLGHfOtWtdRw+
      dmTTuRvrb2/smiIIQn6j6BtBpW7sn9vY2JgT7qZu0M1765rN5rsuOB2d21FwI3iHt5lMIl3I
      bHV0iobuCNPZ1ugKoLOtKagCyLLMqjlMbavu7dV5PCi4DZCKJojH9J3TdR4PCh4evc5Uyfpy
      gM5IJ7FYDJfLxerqKm63m507dzIwMIDf7+ett95CFEU6OjpwOp00NDTw7rvv8o1vfIPx8XGW
      lpYoLy9n3757C7Klo7MVimYDpFIpnE4n8/PzuN1uEokEmqaxc+dOLBZLfgj08OHDiKKI2+3O
      R2Kurq4mEAjgcrmKJZ6ODlCELZJucPDgQZLJJMlkMj8BbnR0lGg0yptvvkk8Hr+jIyudTvP6
      66/T29ubT6ujUwwK2gIYjUZmE4u4PG5UVWVubo7jx48jSRLBYJCDBw/icDi4cuUKY2NjAAwO
      DhKNRvMhxoeGhkilUoyPj3P8+PFCiqejcwsFnQqRTqc533GOl199ZctpHlcX+pMs13aaClHQ
      FiCdTjM+MFbILHV0ioruCNPZ1ugKoLOtKbgR3LSrpZBZ6ugUlYIqgCRJ1NTVFDJLHZ2iUlA/
      QDKZ5NyHZ6ivr+fatWsoisJLL73E6dOn8yEPk8kkR48eBWBkZIRQKMThw4c5ffo0sizT3NzM
      9PQ0sixz5MiRz7mjjs79UXgbQBCw2WzYbDbS6TQrKytks1ni8Th79uzZNMy6c+dOBEFgcXEx
      v1DG6/XS1tZGLBYruGg6Op+maEbw/v37SSaTdHV1kUgkmJ2dvcXze+N/o9FIOp1GVVUWFhYY
      GRnhpZdeKpZoOjp5CtoFkiQJm8tGIBBgZGSE+vp6nnrqqXz8n/7+fkKhEP39/WiahiRJhMPh
      fPfI4/GQTCaRJInx8fH83CAdnWJRUE9wNptlaWnpc+fv3PAwCoLw2HoQn2S5dE/wPZJMJvnF
      L37xudcJgnBXER10dIqF7gjT2dboCqCzrSm4I6y6urqQWeroFJWCjgIZjUYOHDhAMpnk6tWr
      2Gw2ysvLGR8f58CB3H7A6XSagwcPYjKZGBkZYX19nX379tHf34/ZbKa9vZ3Ozk7q6+upr9cX
      1+sUl4Ibwb/85S8RRZHjx4+zuLjIyMgIzz//PFevXmVkZISSkpL8Pr6zs7NUVVWxvLzMsWPH
      WFlZ4fLly0iSpC+H1HkgFMUGEEWR9957j6NHj9LW1kZnZyepVIpvfvObqKrKxMQEmqYhiiI+
      nw+j0cjk5CSSJBEKhdi3bx/nz58vhmg6OpsoigL4fD5EUWRhYQFBEMhkMhw6dIjLly/j8/mQ
      ZZnBwUFkWUZRFLLZLGtra8iyzNNPP01nZydVVVXFEE1HZxMF9wTX1NTQ0NBAQ0ND/nhtbS1A
      /qPe2NigpqYGURTzjoqbvb567H+dB8UmTzBs9v4JgnBX3sAb6e/GyXUv93gQabazXPfiCX6U
      ywvu/Cy3tAB3mrB2tzd8EtLocj0Zcn1WmrwC3NiwQkdnO7GpBchkMg9LDh2dh4I+FUJnW7NJ
      AYaHh9DULJcudaIqCcYnZm+baGwkF/tHU7IMDI1+6qyGf3WNbDLGeiRxV8IM9g9s+j8SWCV9
      m+2AZ0YHmFpY20KOCmNj45uODPQPomZT9PYNMdx9kb99511OnD5PaHWOpYAe1Xq7IX3729/+
      wxv/XLp4iWqnyoddizRaYgRMNfhGrjCzFKSy1MrpMx2kMTE7Po7bJuDfUOnv7UNDw20VmVoM
      I7PBd//ybRob6wglFHqvnGd0bJy1tTWm5pfx2A2cPX8JyeLC7bDS33OJ4eFR4qqR8cE+aipL
      6Th/kYxg5soHf41fK6GxuozVhUkuXu7CYHHws5/8Fbvbj+Kym+npvMDUop9yt5Xz5y+yEopj
      k1J0nL+MaLHTefoEyytrOMtrsZkNdHScY2Fmgp3tR5no7+b5N75GZGaQUDxGSiijotT6EF+H
      zoNmUwvQWCLz8cA6T7e6uTKfoNXm50z3NBNd5/jx37xLSjLTceYMqdg6b//8FDVeB4IoMT01
      Tm93F05PGTa3h3179+IQNpj2rRFTjOyqkZGrdrK+Ns+Hv/wFRrPM6dOnAZhfXOGFl19havAa
      AOcuXOalV77IxGAPDU0t7Nmd8w9c6h7i1S++Qm93N82tbdRUlbLhn+FCzzizg13MrSexO+wM
      9HZxqbOHV1/7Ik6ziL20gmcPtjA4MQPA7Fg/i/4ogiiSTcU533GWlKWMapf84Epd55FhkwK0
      HdjP+PA4e3dWMzHrR7a4aKyr5shzL7KrqYbKqlqefeYIiibx2rGdDEyvAgJ7a0u4PBunwm4E
      BOKJDbLZ3IiSWTYjiBJmswlV06isrqa6roFjhw8CkElE8fkWyWg5URyykbn5BdKKiCBAOBIF
      wCQoLMzPgdGcl9dkcVBbV8vhY8dZn+xGcngRRbAYBWbn5lgJhJFlM4Ioogm5ceCGne385t97
      i1MnP0YyW3nuhZd48dmnEa8Pk/l8vqIWuM6jRd4RpmkayWSSYDBISUkJwWCQ0tJSAis+YlkD
      9dXlzEyM4q5sQFTSOF0OQqEwmgaxtSkW4i6ePdgKwLJvFpPViWQwg6YgG0GVrCQ2wpS4XIyP
      jVHT2IpNNvLhB+/S2txGRV0T6XgUt9vFxPg4NY2tmEgzt7ROc2MtSibF+OQMLTt2EIuEcJeU
      IgDrq4tE0iK15U7GJxfwVngpddmZmJiisaWVxEYMh1UmllZx2iysrwcpLS0htL6OJoDTVYok
      QiYZI4NMIhaizON5mO9E5wGySQFubEx9N6hqhomJOXa0tXAvixzD4RAul/seUuro3D/3rQA6
      Oo8zuh9AZ1uTVwBBEJAk6WHKoqPzwNFbgEcETdNY/3CdxNTdOQ917g9dAR4B1IzK3L+ZY/2D
      dSb/xSTBj4MPW6RtQ9F2idT5fDRVIxvOMvMvZ7DstFD/v9SjJlSm/2CajYEN3K+4sTRZEK3i
      pnnt6oZK+FyYjaENjGVGjB4j1l1W5CYZQfzssTg1rRLtjmLympAbZQTp8QtQpmka8cE4kc4I
      lb9deV/P8JmhER8X1LQKKojyJw2apmqs/nAVZUOh6h9Ufe6HcSey4SyB9wIYyzHC9pwAABIj
      SURBVIzY9tgwlhsRjVtrOLORLLGeGAaXAUOpAWVDIT4SJz4SJzWfIhPIIBgEKn+zkpI3SvIf
      uZpRCbwTINYTIzGdQMtoSFYJg9uApmhkAhlcz7qwtdvIBrJk/Bli/THSy2lKXi1BbpSJD8dJ
      ziQRZRHbPhu2p2xEr0ZZf28d2z4b2fUs6dU0zuNOHIccWFosGEoMiKbNz5YNZwmdCeF6wYWx
      xHhPZbgVNFUjcimCpdWCqdx0x+vUlIrvT33EemJYd1lR4gqN/7Jxy+/k0zwwBQifDxMfj1Px
      31bcs7A3k41lCZ4IEj4bJjmXBAHKvlRG+TfLQYOZP5pBlEUEo4BoEKn7Z3UIBgFN1Yhdi5Gc
      SWL0GDGUGjBXmZEcEoLxk5CNakol8G6A1R+uUvJ6CeqGSmwgRjaUxeQ14TjswH7Ink8rymK+
      JtI0jdCZEIt/uojjqAM1rpIJZhDNItZdVmx7bJjrzJjKTVuqvTRVQ4kpZINZEEGuu/20jUww
      Q/BkkMxaBkurBWubFTWhEuuNEe2JYt1txft3vBgcuYZfiStELkaI9kRJTiXJrGWw7rVS9a0q
      TNUm1t9fZ+kvlyh5pYTwuTByk0z5r5djbbMiWsRbZNc0DTWpoqU01JQKGogWEdEqIhpFNE1D
      y+auEU0iojn3HWQCGWb+9xlEi0hqPoXcJFP5W5VYWi2flGlWI9QRYvHPFil9vZTK36pEMAj4
      /qOPxGiC5v+z+Rbl3QqbFEBRlKIpwOj/OIpcIxPpjlD/z+txHXHB9UEnLa0R6YkQPBVEiSkI
      ZgFBEjDXmrE0WbA2WjGWGRFlEU3VWHtnjZW3V/C87sl1E5otaBmN5f+6jP89P0hQ+euVeH/N
      CxrM/bs5MuEMnq96WPxPi5jLzdj25GrBjD9DailFJpLJLec0CqhJFbJQ8kIJNf+4BtF2U8Fq
      kFpIEeuLEbsWIzWfQokrKGkFQ6kB604r6cU0Wlyj6Q+bMJQ9Rr1MBULnQqy8vUJyKYnrqIu6
      369DsudeVOxajMDfBtgY20BJKxhLjIg2EckmoSZV0ovp3GiiRcpVckJOyTLRTO7dKRqoYLAZ
      yIQzGDwGrG1Wwh1hGv5ZA64XcqFwop1Rlr+3THIxiW1/rrIIfhjE2e6k8luVmCo3txDL/3mZ
      tV+uYW+34zjswHnIianMtOn7ig3HkKtljN7NrdgDaQHUpMrwbw+z56/2kF5KM/dv50gtpBBN
      IpJTIhvMYmm1UPpmKcZSI2pKRctqpOZTJGeSJGeTZAKZ3HFFw/28m6p/WJWvyW4mG86ixBTM
      NZ/MGdJUjaW/WCI5m6T6H1YjN96+BlWTKpqqIZpEBMPddZk0VSO9lCY+GkeQBFwvuh7rAMDZ
      WBaD/c7KqykaGX8GZUNBiSuIBhFznRnJdvuh9Gw0iyAK+fOappFaSBEfjOM45rht90pN5lqv
      xESC0jdKMXru3AXLhrJsDG8Q68m1dtlgFrlJBhUSUwlse23Eh+N4/46X8m+U51uWB6IAkc4I
      gXcDNP2rps0PmFJRogqGEsOWuwKaohWkC6XzZKNmVFJzqVyXsSE3OKAkFHz/t4+N4Q3a/rQN
      ySI9GAWY/5N5HEccuF/U5/zoPHwS0wnM1WZEs1h8P4CmakQ6I9gP2It9Kx2dLWFpsuQN8KIr
      QCaQQbJJGJyPkTGos20ougJELkVwPuMs9m10dO6JoitA6EwI1/N6pGedR5NN/RJRFO86VN1n
      oaU1UrMpHHsc3NNqGR2dIrNJAVRVLWh0uI3RDeRmGVXLeQV1dB41itoFCp4MUvpmaTFvoaNz
      XxRVAeIjcWx7bMW8hY7OfVE0BdCyuVmLxvLizSDU0blfiqYAqcVUborDYzwfRufJp2gKsDGw
      geOQo1jZ6+gUhE2jQIIgFKzGjvXGKP1iqd4C6DzSFK0FSIwlsO7UA83qPNpsagE0TSuII0xN
      qqgpFckpFdSxpqNTaIrSAiRmEpgq7ryuU0fnUaEoCrDRt6FPgNN5LCiOAvRvYN2r9/91Hn0K
      rgCaqhEfj2Nt1RVA59Gn4AqgbCgIkrApRo+OzqPKplEgRVHIZDIIgoCqqnm/QP43Ar5/7yO9
      lL5jhkpMQd4lf3Y+W/gNm3edL9bvG1PAH/bvG7NwRVFEURQkSbrnsivG7yf1fdz1ovhMIJOL
      m/MZGD3G/JpLHZ1HmU0KAOi7xetsK25ZqS6Kes2ts33IK4CmaY9lYFwdnfthUwuQzWYflhw6
      Og8Fvb+js63ZpABdV67kfmga/rW1/HFNU5lfXMz9VhUWlhY/M9NUdIUfvP1jPjh94foRFd/8
      7TegXl/zk0pFOXGyg96rF/D5w5vOr86NcnVg8m6eaRO9A72b/r9ypYtsOk7n1WsMdnbws5+/
      wzvvnWB9ZYapxXWATc9+g5VlH+msykBv7y3nciToujJw2zPLi4uk1a1PChzq7+fOA82bCS2O
      Mr4U2XLeN/D7fCQV6O3v/5wrldu+u1QswMmzl+/6vje4cznCQPcl5pZz72Le5yPmn2VqqTi7
      5kjf/va3//DGPxfOnWPXnj0ADA8Ps7Y4y+DQOEajyA9/8jfsaz9EZHWG7//05+xsbuDc+Yus
      BjcILU0zODbG0lqUupoKYsvTDK2kaG2spcJbxkZwif/6X35EU2sTVzo7mV5YJe5fpn9ikng4
      TiQ0zeWuKUaG+2lpqKG7p5eUKuEtc/H+j99Grt7J2vQAA0NjlJaW8MGJDzFZSyhxWrl0/gxj
      Mz7KS51cOH+Bad8aVuKcv3SVrGih6+IJ1pbXMDi8uO0yFy9cYGJslEPHn2d6uI9jr36F7MoE
      66kUCc1GjcfJ8NAQS3PTjE1NsRSIUVddzjs//R5xHEz3dbLqXyWuWVmc7Kd/eILq2nqMUpLO
      SyNkkn66uq5R4i2j4+x5grEk3R0n2DA4qK/w0NPdzcbKNDGTl9nxYXwz4wyMTFJbV8PZjz9i
      MRAl7F+hpNTKxGyACo+byZE+uru60eQSLpx+n6mJCewVtVw99zFjQ71opTuoK5W52HGawcFh
      UNN8dO4qbreTqxdzZRINruFwmLncPUY4uEL3qROEDW4mBzvxr66SwIK3xMGZj99nNZwivDxL
      V3cvSCI/+/HPaWlr4eKF86zHUlRXehm6dILRNZCzQbp7B5BdpVw+9QEbqokKTwlD165wbWCE
      Mo+Xq5cvMjg6TZXHwakzHQSiKWYHu1n1rxFJG6nwuJga6eNq9zUwyLz7zt+w/9AxpEyU737v
      +1R7XVzqGWV+bo4qj5Mz5y4QS2ksjA8yMjFBX/8gMxNj2Lx1OCx3twT3Dl0gjfm5OaKREIog
      UuKtZO/evTgtRsoqatm7by/Xrl7l2VdeJbw6j28tyPEXXyawOgOA2V3Jy88/zcb8AMvRLPYS
      L/v27qXMacNqtTIxPszq4jIHjj1LYHEeb20d+/YfYtfOXZQ5DEQ3khgMBkCgvrGJOo+V5bjE
      C0d3c7mrGyxlNNdVkAj5uNI/SWhhkhn/BlarjZGJYbr6hnnt9depq3BTUlHLS8+0Mzo9D4Bv
      ZgIViGykUNJJLpw7i+KqodnzSezS+bk51vxRjr/wEuHlXO1X19TK3l2t2NweXnrlJeYnujl7
      9jLEV+gZX8qnlWULZmWd/uklQpEoBoOR2sZW9u/eAYDfv8ZyOMbk1Y8IpbJ0nL2CGlngvXd+
      zuS6wkBPDyklyXe++wOam+tz5WmWsTlkBvv70Uw2Xj68g85z50jbmzny1C4AlEyYSMKIU9SQ
      TQL2ilaSC/1U7X0OrxgiFo9x8nQXS+t+/P4QDU2t7Nm9A5vbyxdeeI7piamcfJEkR9v3YLZY
      MItxlgJp9u3dy/LwZQJJgd7ubrJAdV0drU11TMyu8NqrL9B39TIbGdi/qxlIc+bsBaRsjK7B
      KSxWK2uzI5w718mRF77IvrZGZEcJL778EkszowAMjM3xxddeY6h/gNa2nVR5XdjcXvbu24fX
      aaF1Tzsldo2TH50gg5Ge7i5WAjGe/8IrIIk8297AwNTtexlbVoBsKs7Y2BiLK34AyrxVuMUo
      g9N+Qv4VEhkFQRBYX12hylvK1a4eYikFIZNgoH+AVDrn0YtFwszOTLIcSmM3S4BAJBxguOcS
      EcUMaIiSGbP51ljyBqOV5uYGeq/15I9JZhvp0Ao9vYNUlJdjsebmGZmsbmqryqnfsZvk0ggx
      1QCahttmpqunh6n5FQyGG+uSc7LVNu/iV3/1La50fAxGmWeff5GnD+3n0zsoiZIBURQQr3sp
      ZVFg1vdJfoJgorGlHm9NM621ZddTqXT1XEM2m1BVkeaWFkb6ezFLGtMLywC0VTpZStmZGhnn
      qaf20dBSR0XdDo4cPoDHYaH94AFMmsBv/eavc6bjMqDReeUqNosMaEgGA4IgYnJ4CMwOMzQ6
      lfNqSnb6rnzIfFLELoHVYqGsuoGJ/qtMrcTY236AialJ6uQEBncFRqPG3MLS9ech7421WK0I
      WoaurgFk2YimQTi0hqO8FpfDRnv7U3zy1gyIWoqe7h7spZVYrdbrpWygsamBsopaKi0p5lY2
      kESB8goPvT1dDIxM3FSOuZwsBpXeni4srjJuJhYMEEtm8nLWNTRid9hpf2o/BsmAKAgYjUYE
      QNPSTEzMfuYH/2k27RQfWFshupFAttqQTUYkQSMUS+ItKyESCmJxuDFJAqHgOjZXKbFwAIvd
      xbnTp3jq6GGcViey2YimaYSDAYwWBzZLbqOKaDiEwWwhGolgs9swiCJGWSadSGA0GclkNTQ1
      iyybCfj92F0lyCYj6WQCySSjpBPEEhlKXHZSGQXZnFtvkIzHiKdV3A4rgfUgVpsdq2wiEAhS
      UlZGJp3CbDKSyqrIJiOJRAKLxUIyEUdDwCzLiIKAmk2T1SRMRolEIoEg5M6lkklkWUbJpgnH
      ElhlM7JsJplMIQka4ViSslI3gqCRSKTJpOIIkhGjbCEZDWGQ7VhNEqFYnFK3C03NkkyroCnI
      soVMKk4knqasxEUsEkKTzJgMImazmWQyicViIR6LkFZFZFNu0M5slEgpAkpqA0UTMFtspPwT
      vHdlHq8hTGnLcXY3lWM2SUTDIQSjBbvVTDyRxCQJqKIJA1lC0QRWixnZbCKZylx/rtzzRsNB
      NNGI2WQmnYxhsjpIxsIYZDs2ixklmyarihgElfVwDE9ZCalUClnObT6STScJRuKUlbpZDwSQ
      rVYsFiuRYACr042mZPPlKMsyqpIhsB6mzFOWK3OLBQGIRUKIRjMGgwlNzWA0mgkHA8h2F4Km
      5N+RySiRVjTUrILVark3BUilUnelPTdIJpOYZVmPfvgQuVHpZDHkFPJhC/SYUBAF0NF5XNnk
      CMtkMg9LDh2dh8ItnmCTqThreW+eXlssJEkq6nSOxz3/m6ddF5qbpzQXi2KUzy3h0SXp9rv8
      FQJR/GTH82LlX0yehPyLVf4PQgGKUT76VAidbUH4Qpi+X+lj/HfHUeKftCKbWoD1D9YRgkWq
      oa+PNWt3MSXgbilmE//Y51/k8n9QLcC9lo/v//XlNji/FsN+0E7Vt6qATymA85gTo1icaM66
      DfBw8y92+YtCrjOhao/m+w28FyC1kBvllOs/2Sh90zBoJBLBbDbfPocC8FjXoHr+n8mj3gJk
      AhlWfrCCpcVC6ZufxKzV9y7V2RYYy4zU/tPaW47fNipEMXgQXaDHuQZ93PN/1FuAO3FLePRi
      DcUVMvT6nSjmEO7jnn+xy//Gd1NsG6/Q6H6AbZZ/sf0Aj9v71W2AArH4nxZZ+d4Knrc81P5e
      LcL1+dVdXV1ks1mOHDlCX18fDoeD1tZWACKRCD6fD6PRyOrqKm63mz3XFyTpPBg2KUDgF4Hi
      +gEQitpHFMTi+hnulL+SUJj/d/NoGY35/zBP2VfKsLbl1iyMj4/z8ssvMzExQSKRoK6uLp+u
      u7ubTCbDa6+9lpuCHI0WTXad27NJAdwvuXU/wD3kryZUlr6zRGYlg2SXMJQYmJubQ9M0vvSl
      L3HlyhXS6TRtbW1cvHiRr3zlKwwNDZFKpVhaWkJVVYaGhnjzzTf1wGQPmE0KINkljObibWv6
      IEY5RLV4/eg75l8Ce3+8l/X31nG/7MboMVIv1JPNZrl06RKZTIbjx4/T2dmJw+FgZGSEpqYm
      ampq6O7uJh6PU15eXjS5de6M7gjT8y8IT8QwaDabLeoowZPaBXoc8i/6VIgHNAxa6PL5/wEi
      EXK4PgXWbwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
